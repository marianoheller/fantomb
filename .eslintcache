[{"/home/wdw44/code/fantomb/src/index.tsx":"1","/home/wdw44/code/fantomb/src/reportWebVitals.ts":"2","/home/wdw44/code/fantomb/src/app/index.tsx":"3","/home/wdw44/code/fantomb/src/components/player/index.tsx":"4","/home/wdw44/code/fantomb/src/components/input/index.tsx":"5","/home/wdw44/code/fantomb/src/components/controls/index.tsx":"6","/home/wdw44/code/fantomb/src/components/timebar/index.tsx":"7","/home/wdw44/code/fantomb/src/components/timebar/region.tsx":"8","/home/wdw44/code/fantomb/src/components/recorder/index.tsx":"9","/home/wdw44/code/fantomb/src/shared/hooks/media.ts":"10","/home/wdw44/code/fantomb/src/shared/operators/mouse.ts":"11","/home/wdw44/code/fantomb/src/components/controls/hooks.ts":"12"},{"size":267,"mtime":1613407281670,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1613407281670,"results":"15","hashOfConfig":"14"},{"size":3306,"mtime":1613490775210,"results":"16","hashOfConfig":"14"},{"size":993,"mtime":1613425757290,"results":"17","hashOfConfig":"14"},{"size":981,"mtime":1613407281670,"results":"18","hashOfConfig":"14"},{"size":2799,"mtime":1613422107940,"results":"19","hashOfConfig":"14"},{"size":3995,"mtime":1613490835180,"results":"20","hashOfConfig":"14"},{"size":2492,"mtime":1613490461580,"results":"21","hashOfConfig":"14"},{"size":1758,"mtime":1613451711790,"results":"22","hashOfConfig":"14"},{"size":4565,"mtime":1613423593220,"results":"23","hashOfConfig":"14"},{"size":1495,"mtime":1613450804660,"results":"24","hashOfConfig":"14"},{"size":496,"mtime":1613421657520,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"agnh1m",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/wdw44/code/fantomb/src/index.tsx",[],["52","53"],"/home/wdw44/code/fantomb/src/reportWebVitals.ts",[],"/home/wdw44/code/fantomb/src/app/index.tsx",["54"],"/home/wdw44/code/fantomb/src/components/player/index.tsx",[],"/home/wdw44/code/fantomb/src/components/input/index.tsx",[],"/home/wdw44/code/fantomb/src/components/controls/index.tsx",[],"/home/wdw44/code/fantomb/src/components/timebar/index.tsx",["55","56"],"/home/wdw44/code/fantomb/src/components/timebar/region.tsx",["57","58","59"],"import React, { RefObject, useRef } from \"react\";\nimport { combineLatest, merge, Observable, of } from \"rxjs\";\nimport {\n  useObservable,\n  useObservableCallback,\n  useObservableState,\n  useSubscription,\n} from \"observable-hooks\";\nimport styled from \"styled-components\";\n\nimport * as mouse from \"../../shared/operators/mouse\";\nimport {\n  map,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n  withLatestFrom,\n} from \"rxjs/operators\";\n\nconst Rect = styled.rect`\n  height: 100%;\n  fill: rgba(0, 0, 0, 0.2);\n  stroke: rgba(0, 0, 0, 0.2);\n  stroke-width: 0px 1px 0px 1px;\n  cursor: all-scroll;\n`;\n\nexport type TRegion = { start: number; end: number } | undefined;\n\nexport interface RegionProps {\n  region$: Observable<TRegion>;\n  containerRef: RefObject<SVGSVGElement>;\n  onRegion: (r: TRegion) => void;\n}\n\nconst Region: React.FC<RegionProps> = ({ region$, containerRef, onRegion }) => {\n  const refRect = useRef<SVGRectElement>(null);\n\n  const [onMouseDown, mouseDown$] = useObservableCallback<\n    React.MouseEvent<SVGRectElement, MouseEvent>\n  >((e$) => e$.pipe(map(mouse.stopPropagation)));\n\n  const mouseDrag$ = useObservable(() =>\n    mouseDown$.pipe(\n      map(mouse.preventDefault),\n      switchMap((md) =>\n        mouse.globalMouseMove$.pipe(\n          map((mm) => {\n            mm.preventDefault();\n            if (!containerRef.current) return 0;\n            const dim = containerRef.current.getBoundingClientRect();\n            const deltaX = mm.clientX - md.clientX;\n            return deltaX / dim.width;\n          }),\n          takeUntil(mouse.globalMouseUp$)\n        )\n      )\n    )\n  );\n\n  const updatedRegion$ = useObservable<TRegion>(() =>\n    mouseDrag$.pipe(\n      withLatestFrom(region$),\n      map(([delta, r]) => {\n        if (!r) return r;\n        return { end: r.end + delta, start: r.start + delta };\n      })\n    )\n  );\n\n  const finishedUpdating$ = useObservable<TRegion>(() =>\n    updatedRegion$.pipe(\n      switchMap((r) =>\n        mouse.globalMouseUp$.pipe(\n          take(1),\n          map(() => r)\n        )\n      )\n    )\n  );\n\n  useSubscription(finishedUpdating$, onRegion);\n  const [region] = useObservableState<TRegion>(\n    () => merge(region$, updatedRegion$),\n    undefined\n  );\n\n  if (region === undefined) return null;\n  return (\n    <Rect\n      ref={refRect}\n      onClick={(e) => e.stopPropagation()}\n      onMouseDown={onMouseDown}\n      x={`${region.start * 100}%`}\n      width={`${(region.end - region.start) * 100}%`}\n    />\n  );\n};\n\nexport default Region;\n","/home/wdw44/code/fantomb/src/components/recorder/index.tsx",[],"/home/wdw44/code/fantomb/src/shared/hooks/media.ts",[],"/home/wdw44/code/fantomb/src/shared/operators/mouse.ts",[],"/home/wdw44/code/fantomb/src/components/controls/hooks.ts",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":26},{"ruleId":"64","severity":1,"message":"68","line":10,"column":3,"nodeType":"66","messageId":"67","endLine":10,"endColumn":15},{"ruleId":"64","severity":1,"message":"69","line":16,"column":3,"nodeType":"66","messageId":"67","endLine":16,"endColumn":6},{"ruleId":"64","severity":1,"message":"70","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":23},{"ruleId":"64","severity":1,"message":"71","line":2,"column":44,"nodeType":"66","messageId":"67","endLine":2,"endColumn":46},{"ruleId":"64","severity":1,"message":"69","line":17,"column":3,"nodeType":"66","messageId":"67","endLine":17,"endColumn":6},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'debounceTime' is defined but never used.","'tap' is defined but never used.","'combineLatest' is defined but never used.","'of' is defined but never used.","no-global-assign","no-unsafe-negation"]