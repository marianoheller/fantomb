{"version":3,"sources":["app/components/player/index.tsx","app/components/input/index.tsx","shared/operators/mouse.ts","app/components/timebar/region/hooks.ts","app/components/timebar/region/index.tsx","app/components/timebar/axis/index.tsx","shared/hooks/browser.ts","app/components/timebar/marker/index.tsx","app/components/timebar/index.tsx","app/components/controls/utils.ts","app/components/controls/index.tsx","shared/hooks/media.ts","app/components/recorder/index.tsx","app/state.ts","app/index.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledReactPlayer","styled","ReactPlayer","Player","state$","setProgress","setDuration","useObservableState","pipe","map","s","playerRef","ref","_setProgress","useCallback","played","url","status","playing","controls","onDuration","onProgress","volume","progressInterval","Input","onChange","useObservableCallback","event$","e","currentTarget","value","_onChange","onChange$","filter","key","_onEnter","onEnter$","onActualChange$","useObservable","debounce","race","timer","useSubscription","name","onKeyPress","preventDefault","stopPropagation","globalMouseEventToXDistance","current","clientX","dim","getBoundingClientRect","left","width","globalMouseMove$","fromEvent","document","globalMouseUp$","useRegionResize","region$","containerRef","onRegion","e$","mouse","onMouseDown","mouseDown$","mouseDrag$","switchMap","md","mm","takeUntil","updatedRegion$","withLatestFrom","delta","r","finishedUpdating$","take","Rect","rect","Border","Region","props","drag","end","start","useRegionDrag","resizeStart","resizeEnd","merge","undefined","region","onClick","x","Foreign","foreignObject","Wrapper","div","Tick","span","toDateTime","secs","t","Date","setSeconds","Axis","duration$","windowSize","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","d","scaleTime","domain","range","scale","Ticks","useMemo","ticks","tick","getHours","format","valueOf","xmlns","String","StyledRect","Marker","progress$","v","markerPosition","Svg","svg","interactable","Timebar","setRegion","svgRef","useRef","videoLoaded","appRegion$","distinctUntilChanged","progress","duration","onMouseUp","mouseUp$","mousePosRelative$","_onClick","leftClick$","button","rightClick$","throttleTime","holdClick$","regionClear$","_region$","x1","x2","regionEnd$","onContextMenu","getLabels","video","recording","playback","Container","noop","Controls","setStatus","status$","labels","videoEnabled","recordingEnabled","playbackEnabled","$e","onVideoClick","videoClick$","onRecordingClick","recordingClick$","onPlaybackClick","playbackClick$","disabled","Recorder","refAudio","s1","s2","pairwise","blobUrl","setBlobUrl","blobOptions","onStop","onStart","onError","onDataAvailable","mediaChunks","React","mediaStream","mediaRecorder","error","setError","mediaBlob","setMediaBlob","isAudioMuted","setIsAudioMuted","getMediaStream","a","navigator","mediaDevices","getUserMedia","audio","stream","getAudioTracks","forEach","audioTrack","addTrack","clearMediaStream","getTracks","track","stop","handleDataAvailable","data","push","handleStop","sampleChunk","type","blobPropertyBag","Object","assign","blob","Blob","handleError","startRecording","MediaRecorder","mimeType","muteAudio","mute","enabled","pauseRecording","state","pause","resumeRecording","resume","stopRecording","console","warn","useEffect","ReferenceError","unMuteAudio","MediaStream","getVideoTracks","useMediaRecorder","_blobUrl","URL","createObjectURL","src","statusPrev","revokeObjectURL","play","currentTime","onEnded","initialState","createRef","App","BehaviorSubject","getValue","seekTo","next","setUrl","setManualProgress","log","useAppState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2c0f9233.chunk.js","sourcesContent":["import { useObservableState } from \"observable-hooks\";\nimport React, { useCallback } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport styled from \"styled-components\";\nimport { AppState } from \"../../state\";\n\ninterface PlayerProps {\n  state$: BehaviorSubject<AppState>;\n  setProgress: (progress: number) => void;\n  setDuration: (progress: number) => void;\n}\n\nconst StyledReactPlayer = styled(ReactPlayer)`\n  pointer-events: none;\n`;\n\nconst Player: React.FC<PlayerProps> = ({\n  state$,\n  setProgress,\n  setDuration,\n}) => {\n  const [ref] = useObservableState(() => state$.pipe(map((s) => s.playerRef)));\n  const _setProgress = useCallback(({ played }) => setProgress(played), [\n    setProgress,\n  ]);\n\n  const [url] = useObservableState(() => state$.pipe(map((s) => s.url)));\n  const [playing] = useObservableState(() =>\n    state$.pipe(map((s) => s.status === \"playingVideo\"))\n  );\n\n  return (\n    <StyledReactPlayer\n      ref={ref}\n      url={url}\n      playing={playing}\n      controls={false}\n      onDuration={setDuration}\n      onProgress={_setProgress}\n      volume={1}\n      progressInterval={100}\n    />\n  );\n};\n\nexport default Player;\n","import {\n  useObservable,\n  useObservableCallback,\n  useSubscription,\n} from \"observable-hooks\";\nimport React, { KeyboardEvent } from \"react\";\nimport { race, timer } from \"rxjs\";\nimport { debounce, filter, map } from \"rxjs/operators\";\n\ninterface InputProps {\n  onChange: (s: string) => void;\n}\n\nconst Input: React.FC<InputProps> = ({ onChange }) => {\n  const [_onChange, onChange$] = useObservableCallback<\n    string,\n    React.ChangeEvent<HTMLInputElement>\n  >((event$) => event$.pipe(map((e) => e.currentTarget.value)));\n\n  const [_onEnter, onEnter$] = useObservableCallback<\n    string,\n    KeyboardEvent<HTMLInputElement>\n  >((event$) =>\n    event$.pipe(\n      filter((e) => e.key === \"Enter\"),\n      map((e) => e.currentTarget.value)\n    )\n  );\n\n  const onActualChange$ = useObservable(() =>\n    onChange$.pipe(debounce(() => race(timer(1000), onEnter$)))\n  );\n\n  useSubscription(onActualChange$, onChange);\n\n  return (\n    <input name=\"youtube url\" onChange={_onChange} onKeyPress={_onEnter} />\n  );\n};\n\nexport default Input;\n","import { RefObject, SyntheticEvent } from \"react\";\nimport { fromEvent, OperatorFunction } from \"rxjs\";\nimport { distinctUntilChanged, filter, map } from \"rxjs/operators\";\n\nexport const preventDefault = <T extends SyntheticEvent>(e: T): T => {\n  e.preventDefault();\n  return e;\n};\n\nexport const stopPropagation = <T extends SyntheticEvent>(e: T): T => {\n  e.stopPropagation();\n  return e;\n};\n\nexport const globalMouseEventToXDistance = <T extends Element>(\n  ref: RefObject<T>\n) => (e: React.MouseEvent): number => {\n  if (!ref.current) return 0;\n  const { clientX } = e;\n  const dim = ref.current.getBoundingClientRect();\n  const x = clientX - dim.left;\n  return x / dim.width;\n};\n\nexport const localMouseEventToXDistance = <T extends Element>(\n  e: React.MouseEvent<T, MouseEvent>\n): number => {\n  const { target, clientX } = e;\n  const dim = (target as Element).getBoundingClientRect();\n  const x = clientX - dim.left;\n  return x / dim.width;\n};\n\nexport const globalMouseMove$ = fromEvent<React.MouseEvent>(\n  document,\n  \"mousemove\"\n);\n\nexport const globalMouseDown$ = fromEvent<React.MouseEvent>(\n  document,\n  \"mousedown\"\n);\n\nexport const globalMouseUp$ = fromEvent<React.MouseEvent>(\n  document,\n  \"mouseup\"\n);\n\nexport const mousePosRelative$ = <T extends Element>(ref: RefObject<T>) =>\n  globalMouseMove$.pipe(\n    map(globalMouseEventToXDistance(ref)),\n    filter((v) => v !== undefined) as OperatorFunction<\n      number | undefined,\n      number\n    >,\n    distinctUntilChanged()\n  );\n","import React, { RefObject } from \"react\";\nimport { Observable } from \"rxjs\";\nimport {\n  useObservable,\n  useObservableCallback,\n  useSubscription,\n} from \"observable-hooks\";\n\nimport * as mouse from \"../../../../shared/operators/mouse\";\nimport {\n  map,\n  switchMap,\n  take,\n  takeUntil,\n  withLatestFrom,\n} from \"rxjs/operators\";\n\nexport interface Region {\n  start: number;\n  end: number;\n}\nexport type TRegion = Region | undefined;\n\nexport interface UseRegionDragInput {\n  region$: Observable<TRegion>;\n  containerRef: RefObject<SVGSVGElement>;\n  onRegion: (r: TRegion) => void;\n}\n\nexport interface UseRegionDragOutput {\n  updatedRegion$: Observable<TRegion>;\n  onMouseDown: (e: React.MouseEvent<SVGRectElement, MouseEvent>) => void;\n}\n\nexport const useRegionDrag = ({\n  region$,\n  containerRef,\n  onRegion,\n}: UseRegionDragInput): UseRegionDragOutput => {\n  const [onMouseDown, mouseDown$] = useObservableCallback<\n    React.MouseEvent<SVGRectElement, MouseEvent>\n  >((e$) => e$.pipe(map(mouse.stopPropagation)));\n\n  const mouseDrag$ = useObservable(() =>\n    mouseDown$.pipe(\n      map(mouse.preventDefault),\n      switchMap((md) =>\n        mouse.globalMouseMove$.pipe(\n          map((mm) => {\n            mm.preventDefault();\n            if (!containerRef.current) return 0;\n            const dim = containerRef.current.getBoundingClientRect();\n            const deltaX = mm.clientX - md.clientX;\n            return deltaX / dim.width;\n          }),\n          takeUntil(mouse.globalMouseUp$)\n        )\n      )\n    )\n  );\n\n  const updatedRegion$ = useObservable<TRegion>(() =>\n    mouseDrag$.pipe(\n      withLatestFrom(region$),\n      map(([delta, r]) => {\n        if (!r) return r;\n        return { end: r.end + delta, start: r.start + delta };\n      })\n    )\n  );\n\n  const finishedUpdating$ = useObservable<TRegion>(() =>\n    updatedRegion$.pipe(\n      switchMap((r) =>\n        mouse.globalMouseUp$.pipe(\n          take(1),\n          map(() => r)\n        )\n      )\n    )\n  );\n\n  useSubscription(finishedUpdating$, onRegion);\n  return { updatedRegion$, onMouseDown };\n};\n\nexport interface UseRegionResize {\n  region$: Observable<TRegion>;\n  containerRef: RefObject<SVGSVGElement>;\n  onRegion: (r: TRegion) => void;\n  key: keyof Region;\n}\n\nexport interface UseRegionResizeOutput {\n  updatedRegion$: Observable<TRegion>;\n  onMouseDown: (e: React.MouseEvent<SVGRectElement, MouseEvent>) => void;\n}\n\nexport const useRegionResize = ({\n  region$,\n  containerRef,\n  onRegion,\n  key,\n}: UseRegionResize): UseRegionResizeOutput => {\n  const [onMouseDown, mouseDown$] = useObservableCallback<\n    React.MouseEvent<SVGRectElement, MouseEvent>\n  >((e$) => e$.pipe(map(mouse.stopPropagation)));\n\n  const mouseDrag$ = useObservable(() =>\n    mouseDown$.pipe(\n      map(mouse.preventDefault),\n      switchMap((md) =>\n        mouse.globalMouseMove$.pipe(\n          map((mm) => {\n            mm.preventDefault();\n            if (!containerRef.current) return 0;\n            const dim = containerRef.current.getBoundingClientRect();\n            const deltaX = mm.clientX - md.clientX;\n            return deltaX / dim.width;\n          }),\n          takeUntil(mouse.globalMouseUp$)\n        )\n      )\n    )\n  );\n\n  const updatedRegion$ = useObservable<TRegion>(() =>\n    mouseDrag$.pipe(\n      withLatestFrom(region$),\n      map(([delta, r]) => {\n        if (!r) return r;\n        return { ...r, [key]: r[key] + delta };\n      })\n    )\n  );\n\n  const finishedUpdating$ = useObservable<TRegion>(() =>\n    updatedRegion$.pipe(\n      switchMap((r) =>\n        mouse.globalMouseUp$.pipe(\n          take(1),\n          map(() => r)\n        )\n      )\n    )\n  );\n\n  useSubscription(finishedUpdating$, onRegion);\n  return { updatedRegion$, onMouseDown };\n};\n","import React, { RefObject } from \"react\";\nimport { merge, Observable } from \"rxjs\";\nimport { useObservableState } from \"observable-hooks\";\nimport styled from \"styled-components\";\n\nimport { useRegionDrag, useRegionResize } from \"./hooks\";\n\nconst Rect = styled.rect`\n  height: 100%;\n  fill: rgba(0, 0, 0, 0.25);\n  stroke: rgba(0, 0, 0, 0.25);\n  cursor: all-scroll;\n`;\n\nconst Border = styled.rect`\n  height: 100%;\n  width: 1px;\n  fill: rgba(0, 0, 0, 0.5);\n  cursor: col-resize;\n`;\n\nexport type TRegion = { start: number; end: number } | undefined;\n\nexport interface RegionProps {\n  region$: Observable<TRegion>;\n  containerRef: RefObject<SVGSVGElement>;\n  onRegion: (r: TRegion) => void;\n}\n\nconst Region: React.FC<RegionProps> = (props) => {\n  const { region$ } = props;\n  const drag = useRegionDrag(props);\n  const resizeStart = useRegionResize({ ...props, key: \"start\" });\n  const resizeEnd = useRegionResize({ ...props, key: \"end\" });\n\n  const [region] = useObservableState<TRegion>(\n    () =>\n      merge(\n        region$,\n        drag.updatedRegion$,\n        resizeStart.updatedRegion$,\n        resizeEnd.updatedRegion$\n      ),\n    undefined\n  );\n\n  if (region === undefined) return null;\n  return (\n    <>\n      <Rect\n        onClick={(e) => e.stopPropagation()}\n        onMouseDown={drag.onMouseDown}\n        x={`${region.start * 100}%`}\n        width={`${(region.end - region.start) * 100}%`}\n      />\n      <Border\n        x={`${region.start * 100}%`}\n        onClick={(e) => e.stopPropagation()}\n        onMouseDown={resizeStart.onMouseDown}\n      />\n      <Border\n        x={`${region.end * 100}%`}\n        onClick={(e) => e.stopPropagation()}\n        onMouseDown={resizeEnd.onMouseDown}\n      />\n    </>\n  );\n};\n\nexport default Region;\n","import React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { scaleTime } from \"d3-scale\";\nimport format from \"date-fns/format\";\nimport { useWindowSize } from \"../../../../shared/hooks/browser\";\nimport { useObservableState } from \"observable-hooks\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\ninterface AxiosProps {\n  duration$: Observable<number>;\n}\n\nconst Foreign = styled.foreignObject`\n  width: 100%;\n  height: 0.5rem;\n  font-size: 0.33rem;\n  // y\n`;\n\nconst Wrapper = styled.div<{ xmlns: string }>`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Tick = styled.span``;\n\nfunction toDateTime(secs: number | undefined) {\n  var t = new Date(1970, 0, 1);\n  if (secs) t.setSeconds(secs);\n  return t;\n}\n\nconst formatTick = (d: Date): string => {\n  if (d.getHours() > 0) return format(d, \"HH:mm:ss\");\n  return format(d, \"mm:ss\");\n};\n\nconst Axis: React.FC<AxiosProps> = ({ duration$ }) => {\n  const windowSize = useWindowSize();\n  const [scale] = useObservableState(() =>\n    duration$.pipe(\n      map((d) =>\n        scaleTime()\n          .domain([toDateTime(0), toDateTime(d)])\n          .range([0, 100])\n      )\n    )\n  );\n\n  const Ticks = useMemo(\n    () =>\n      scale\n        ?.ticks()\n        .map((tick) => <Tick key={tick.valueOf()}>{formatTick(tick)}</Tick>),\n    [scale]\n  );\n\n  return (\n    <Foreign key={String(windowSize)}>\n      <Wrapper xmlns=\"http://www.w3.org/1999/xhtml\">{Ticks}</Wrapper>\n    </Foreign>\n  );\n};\n\nexport default Axis;\n","import { useLayoutEffect, useState } from \"react\";\n\ntype Size = [number, number];\n\nexport function useWindowSize(): Size {\n  const [size, setSize] = useState<Size>([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return size;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Observable } from \"rxjs\";\nimport { useObservableState } from \"observable-hooks\";\nimport { map } from \"rxjs/operators\";\n\ninterface MarkerProps {\n  progress$: Observable<number>;\n}\n\nconst StyledRect = styled.rect`\n  width: 1px;\n  height: 100%;\n  fill: rgb(10, 10, 10);\n`;\n\nconst Marker: React.FC<MarkerProps> = ({ progress$ }) => {\n  const [markerPosition] = useObservableState<string>(\n    () =>\n      progress$.pipe(\n        map((v) => {\n          if (!v) return \"0px\";\n          return `${v * 100}%`;\n        })\n      ),\n    \"0px\"\n  );\n\n  return <StyledRect x={markerPosition} />;\n};\n\nexport default Marker;\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  BehaviorSubject,\n  merge,\n  Observable,\n  OperatorFunction,\n  timer,\n} from \"rxjs\";\nimport {\n  useObservable,\n  useObservableCallback,\n  useObservableState,\n  useSubscription,\n} from \"observable-hooks\";\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  take,\n  takeUntil,\n  throttleTime,\n  withLatestFrom,\n} from \"rxjs/operators\";\nimport * as mouse from \"../../../shared/operators/mouse\";\n\nimport { AppState } from \"../../state\";\n\nimport Region, { TRegion } from \"./region\";\nimport Axis from \"./axis\";\nimport Marker from \"./marker\";\n\ninterface TimebarProps {\n  state$: BehaviorSubject<AppState>;\n  setRegion: (r: TRegion) => void;\n  setProgress: (r: number) => void;\n}\n\nconst Svg = styled.svg<{ interactable: boolean }>`\n  width: 100%;\n  height: 2rem;\n  background-color: rgb(240, 240, 240);\n  cursor: ${({ interactable }) => (interactable ? \"pointer\" : \"auto\")};\n  pointer-events: ${({ interactable }) => (interactable ? \"all\" : \"none\")};\n`;\n\nconst Timebar: React.FC<TimebarProps> = ({\n  state$,\n  setRegion,\n  setProgress,\n}) => {\n  const svgRef = useRef(null);\n  const [videoLoaded] = useObservableState(() =>\n    state$.pipe(map(({ url }) => url !== undefined))\n  );\n  const appRegion$ = useObservable(() =>\n    state$.pipe(\n      map((s) => s.region),\n      distinctUntilChanged()\n    )\n  );\n\n  const progress$ = useObservable<number>(() =>\n    state$.pipe(map(({ progress }) => progress))\n  );\n\n  const duration$ = useObservable<number>(() =>\n    state$.pipe(map(({ duration }) => duration))\n  );\n\n  const [onMouseDown, mouseDown$] = useObservableCallback<\n    React.MouseEvent<SVGSVGElement, MouseEvent>\n  >((e$) => e$.pipe(map(mouse.preventDefault)));\n\n  const [onMouseUp, mouseUp$] = useObservableCallback<\n    React.MouseEvent<SVGSVGElement, MouseEvent>\n  >((e$) => e$.pipe(map(mouse.preventDefault)));\n\n  const mousePosRelative$ = mouse.globalMouseMove$.pipe(\n    map(mouse.globalMouseEventToXDistance(svgRef)),\n    filter((v) => v !== undefined) as OperatorFunction<\n      number | undefined,\n      number\n    >\n  );\n\n  const [_onClick, click$] = useObservableCallback<\n    React.MouseEvent<SVGSVGElement, MouseEvent>\n  >((e$) => e$);\n\n  const leftClick$ = click$.pipe(\n    filter((e) => e.button === 0),\n    map(mouse.globalMouseEventToXDistance(svgRef))\n  );\n\n  const rightClick$ = mouseDown$.pipe(\n    filter((e) => e.button === 2),\n    throttleTime(500)\n  );\n\n  const holdClick$ = mouseDown$.pipe(\n    switchMap((e) =>\n      timer(100).pipe(\n        takeUntil(mouseUp$),\n        map(() => mouse.globalMouseEventToXDistance(svgRef)(e))\n      )\n    )\n  );\n\n  const regionClear$ = rightClick$.pipe(map(() => undefined));\n\n  const _region$: Observable<TRegion> = merge(\n    holdClick$.pipe(\n      switchMap((x1) =>\n        mousePosRelative$.pipe(\n          map((x2) => {\n            if (x1 > x2) return { start: x2, end: x1 };\n            else return { start: x1, end: x2 };\n          }),\n          takeUntil(mouseUp$)\n        )\n      )\n    ),\n    regionClear$\n  );\n\n  const regionEnd$ = holdClick$.pipe(\n    switchMap(() => mouseUp$.pipe(take(1))),\n    withLatestFrom(_region$),\n    map(([_, r]) => r)\n  );\n\n  useSubscription(leftClick$, setProgress);\n  useSubscription(regionEnd$, setRegion);\n  useSubscription(regionClear$, setRegion);\n\n  const region$ = useObservable(() => merge(appRegion$, _region$));\n\n  return (\n    <>\n      <Svg\n        ref={svgRef}\n        onContextMenu={(e) => e.preventDefault()}\n        onClick={_onClick}\n        onMouseUp={onMouseUp}\n        onMouseDown={onMouseDown}\n        interactable={!!videoLoaded}\n      >\n        <Marker progress$={progress$} />\n        <Region region$={region$} containerRef={svgRef} onRegion={setRegion} />\n        <Axis duration$={duration$} />\n      </Svg>\n    </>\n  );\n};\n\nexport default Timebar;\n","import { AppStatus } from \"../../state\";\n\nexport const getLabels = (status: AppStatus) => {\n  const video = status === \"playingVideo\" ? \"Stop\" : \"Play\";\n  const recording =\n    status === \"recordingVoice\" ? \"Stop recording\" : \"Start recording\";\n  const playback = status === \"playingVoice\" ? \"Stop voice\" : \"Play Voice\";\n\n  return { video, recording, playback };\n};\n","import React from \"react\";\nimport {\n  useObservable,\n  useObservableCallback,\n  useObservableState,\n  useSubscription,\n} from \"observable-hooks\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { distinctUntilChanged, map, withLatestFrom } from \"rxjs/operators\";\nimport styled from \"styled-components\";\nimport { AppState, AppStatus } from \"../../state\";\nimport { getLabels } from \"./utils\";\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\ninterface ControlProps {\n  state$: BehaviorSubject<AppState>;\n  setStatus: (status: AppStatus) => void;\n}\n\nconst noop = (...args: any[]): void => {};\n\nconst Controls: React.FC<ControlProps> = ({ state$, setStatus }) => {\n  const status$ = useObservable(() =>\n    state$.pipe(\n      map((s) => s.status),\n      distinctUntilChanged()\n    )\n  );\n\n  const [labels] = useObservableState(() => status$.pipe(map(getLabels)));\n\n  const [videoEnabled] = useObservableState<boolean>(() =>\n    status$.pipe(\n      map((status) => status === \"playingVideo\" || status === \"idle\")\n    )\n  );\n\n  const [recordingEnabled] = useObservableState<boolean>(() =>\n    status$.pipe(\n      map((status) => status === \"recordingVoice\" || status === \"idle\")\n    )\n  );\n\n  const [playbackEnabled] = useObservableState<boolean>(() =>\n    status$.pipe(\n      map((status) => status === \"playingVoice\" || status === \"idle\")\n    )\n  );\n\n  const [onVideoClick, videoClick$] = useObservableCallback(($e) =>\n    $e.pipe(withLatestFrom(state$))\n  );\n  useSubscription(videoClick$, ([_, { status }]) => {\n    switch (status) {\n      case \"playingVideo\":\n        setStatus(\"idle\");\n        break;\n      case \"idle\":\n        setStatus(\"playingVideo\");\n        break;\n      default:\n        break;\n    }\n  });\n\n  const [onRecordingClick, recordingClick$] = useObservableCallback(($e) =>\n    $e.pipe(withLatestFrom(state$))\n  );\n  useSubscription(recordingClick$, ([_, { status }]) => {\n    switch (status) {\n      case \"recordingVoice\":\n        setStatus(\"idle\");\n        break;\n      case \"idle\":\n        setStatus(\"recordingVoice\");\n        break;\n      default:\n        break;\n    }\n  });\n\n  const [onPlaybackClick, playbackClick$] = useObservableCallback(($e) =>\n    $e.pipe(withLatestFrom(state$))\n  );\n  useSubscription(playbackClick$, ([_, { status }]) => {\n    switch (status) {\n      case \"playingVoice\":\n        setStatus(\"idle\");\n        break;\n      case \"idle\":\n        setStatus(\"playingVoice\");\n        break;\n      default:\n        break;\n    }\n  });\n\n  return (\n    <Container>\n      <button\n        disabled={!videoEnabled}\n        onClick={videoEnabled ? onVideoClick : noop}\n      >\n        {labels?.video}\n      </button>\n      <button\n        disabled={!recordingEnabled}\n        onClick={recordingEnabled ? onRecordingClick : noop}\n      >\n        {labels?.recording}\n      </button>\n      <button\n        disabled={!playbackEnabled}\n        onClick={playbackEnabled ? onPlaybackClick : noop}\n      >\n        {labels?.playback}\n      </button>\n    </Container>\n  );\n};\n\nexport default Controls;\n","import React, { useCallback } from \"react\";\n\nconst noop = () => {};\n\nexport type MediaRecorderStatus =\n  | \"acquiring_media\"\n  | \"ready\"\n  | \"failed\"\n  | \"idle\"\n  | \"stopping\"\n  | \"stopped\"\n  | \"recording\";\n\nexport interface UseMediaRecorder {\n  blobOptions?: Partial<BlobPropertyBag>;\n  onStop?: (b: Blob) => void;\n  onStart?: VoidFunction;\n  onError?: (e: DOMException) => void;\n  onDataAvailable?: (b: Blob) => void;\n}\n\nexport function useMediaRecorder({\n  blobOptions = {},\n  onStop = noop,\n  onStart = noop,\n  onError = noop,\n  onDataAvailable = noop,\n}: UseMediaRecorder) {\n  let mediaChunks = React.useRef<Blob[]>([]);\n  let mediaStream = React.useRef<MediaStream | null>(null);\n  let mediaRecorder = React.useRef<MediaRecorder | null>(null);\n  let [error, setError] = React.useState<Error | null>(null);\n  let [status, setStatus] = React.useState<MediaRecorderStatus>(\"idle\");\n  let [mediaBlob, setMediaBlob] = React.useState<Blob | null>(null);\n  let [isAudioMuted, setIsAudioMuted] = React.useState(false);\n\n  const getMediaStream = useCallback(async () => {\n    if (error) {\n      setError(null);\n    }\n\n    setStatus(\"acquiring_media\");\n\n    try {\n      const stream = await window.navigator.mediaDevices.getUserMedia({\n        audio: true,\n      });\n\n      stream\n        .getAudioTracks()\n        .forEach((audioTrack) => stream.addTrack(audioTrack));\n\n      mediaStream.current = stream;\n      setStatus(\"ready\");\n    } catch (err) {\n      setError(err);\n      setStatus(\"failed\");\n    }\n  }, [mediaStream, setStatus, setError, error]);\n\n  const clearMediaStream = useCallback(() => {\n    if (mediaStream.current) {\n      mediaStream.current.getTracks().forEach((track) => track.stop());\n      mediaStream.current = null;\n    }\n  }, [mediaStream]);\n\n  const handleDataAvailable = useCallback(\n    (e: BlobEvent) => {\n      if (e.data.size) {\n        mediaChunks.current.push(e.data);\n      }\n      onDataAvailable(e.data);\n    },\n    [onDataAvailable, mediaChunks]\n  );\n\n  const handleStop = useCallback(() => {\n    let [sampleChunk] = mediaChunks.current;\n    const type = sampleChunk ? sampleChunk.type : \"audio/webm\";\n    let blobPropertyBag = Object.assign({ type }, blobOptions);\n    let blob = new Blob(mediaChunks.current, blobPropertyBag);\n\n    setMediaBlob(blob);\n    setStatus(\"stopped\");\n    onStop(blob);\n  }, [mediaChunks, blobOptions, setMediaBlob, setStatus, onStop]);\n\n  const handleError = useCallback(\n    (e: MediaRecorderErrorEvent) => {\n      setError(e.error);\n      setStatus(\"idle\");\n      onError(e.error);\n    },\n    [setError, setStatus, onError]\n  );\n\n  const startRecording = useCallback(async () => {\n    if (error) {\n      setError(null);\n    }\n\n    if (!mediaStream.current && status !== \"acquiring_media\") {\n      await getMediaStream();\n    }\n\n    mediaChunks.current = [];\n\n    if (mediaStream.current) {\n      mediaRecorder.current = new MediaRecorder(mediaStream.current, {\n        mimeType: \"audio/webm\",\n      });\n      mediaRecorder.current.addEventListener(\n        \"dataavailable\",\n        handleDataAvailable\n      );\n      mediaRecorder.current.addEventListener(\"stop\", handleStop);\n      mediaRecorder.current.addEventListener(\"error\", handleError);\n      mediaRecorder.current.start(100);\n      setStatus(\"recording\");\n      onStart();\n    }\n  }, [\n    mediaRecorder,\n    mediaStream,\n    mediaChunks,\n    error,\n    status,\n    onStart,\n    setError,\n    setStatus,\n    getMediaStream,\n    handleDataAvailable,\n    handleError,\n    handleStop,\n  ]);\n\n  const muteAudio = useCallback(\n    (mute: boolean) => {\n      setIsAudioMuted(mute);\n\n      if (mediaStream.current) {\n        mediaStream.current.getAudioTracks().forEach((audioTrack) => {\n          audioTrack.enabled = !mute;\n        });\n      }\n    },\n    [setIsAudioMuted, mediaStream]\n  );\n\n  const pauseRecording = useCallback(() => {\n    if (mediaRecorder.current && mediaRecorder.current.state === \"recording\") {\n      mediaRecorder.current.pause();\n    }\n  }, [mediaRecorder]);\n\n  const resumeRecording = useCallback(() => {\n    if (mediaRecorder.current && mediaRecorder.current.state === \"paused\") {\n      mediaRecorder.current.resume();\n    }\n  }, [mediaRecorder]);\n\n  const stopRecording = useCallback(() => {\n    if (mediaRecorder.current) {\n      setStatus(\"stopping\");\n      try {\n        mediaRecorder.current.stop();\n      } catch {\n        console.warn(\"Stoping idle media recorder!\");\n      }\n      mediaRecorder.current.removeEventListener(\n        \"dataavailable\",\n        handleDataAvailable\n      );\n      mediaRecorder.current.removeEventListener(\"stop\", handleStop);\n      mediaRecorder.current.removeEventListener(\"error\", handleError);\n      clearMediaStream();\n    }\n  }, [\n    mediaRecorder,\n    clearMediaStream,\n    handleDataAvailable,\n    handleError,\n    handleStop,\n    setStatus,\n  ]);\n\n  React.useEffect(() => {\n    if (!window.MediaRecorder) {\n      throw new ReferenceError(\n        \"MediaRecorder is not supported in this browser. Please ensure that you are running the latest version of chrome/firefox/edge.\"\n      );\n    }\n  }, []);\n\n  return {\n    error,\n    status,\n    mediaBlob,\n    isAudioMuted,\n    stopRecording,\n    getMediaStream,\n    startRecording,\n    pauseRecording,\n    resumeRecording,\n    clearMediaStream,\n    muteAudio: () => muteAudio(true),\n    unMuteAudio: () => muteAudio(false),\n    get liveStream() {\n      if (mediaStream.current) {\n        return new MediaStream(mediaStream.current.getVideoTracks());\n      }\n      return null;\n    },\n  };\n}\n","import { useObservable, useSubscription } from \"observable-hooks\";\nimport React, { useCallback, useRef, useState } from \"react\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { distinctUntilChanged, map, pairwise } from \"rxjs/operators\";\nimport { useMediaRecorder } from \"../../../shared/hooks/media\";\nimport { AppState, AppStatus } from \"../../state\";\n\ninterface RecorderProps {\n  state$: BehaviorSubject<AppState>;\n  setStatus: (status: AppStatus) => void;\n}\n\nconst Recorder: React.FC<RecorderProps> = ({ state$, setStatus }) => {\n  const refAudio = useRef<HTMLAudioElement>(null);\n  const status$ = useObservable(() =>\n    state$.pipe(\n      distinctUntilChanged((s1, s2) => s1.status === s2.status),\n      map((s) => s.status),\n      pairwise()\n    )\n  );\n  const [blobUrl, setBlobUrl] = useState<string | undefined>(undefined);\n\n  const onStop = useCallback(\n    (blob: Blob) => {\n      if (refAudio.current) {\n        const _blobUrl = URL.createObjectURL(blob);\n        refAudio.current.src = _blobUrl;\n        setBlobUrl(_blobUrl);\n        setStatus(\"idle\");\n      }\n    },\n    [setStatus, setBlobUrl, refAudio]\n  );\n\n  const { startRecording, stopRecording } = useMediaRecorder({ onStop });\n\n  useSubscription(status$, ([statusPrev, status]) => {\n    switch (status) {\n      case \"recordingVoice\":\n        startRecording();\n        URL.revokeObjectURL(blobUrl || \"\");\n        setBlobUrl(undefined);\n        break;\n      case \"playingVoice\":\n        if (refAudio.current && refAudio.current.src) {\n          refAudio.current.play();\n        }\n        break;\n      case \"idle\":\n        if (statusPrev === \"playingVoice\") {\n          if (refAudio.current) {\n            refAudio.current.pause();\n            refAudio.current.currentTime = 0;\n          }\n        } else if (statusPrev === \"recordingVoice\") {\n          stopRecording();\n        }\n        break;\n      default:\n        break;\n    }\n  });\n\n  const onEnded = useCallback(() => {\n    if (refAudio.current) {\n      refAudio.current.pause();\n      refAudio.current.currentTime = 0;\n      setStatus(\"idle\");\n    }\n  }, [refAudio, setStatus]);\n\n  return <audio ref={refAudio} onEnded={onEnded} />;\n};\n\nexport default Recorder;\n","import { useSubscription } from \"observable-hooks\";\nimport { useCallback, useMemo, RefObject, createRef } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { BehaviorSubject } from \"rxjs\";\n\nexport type Url = string | undefined;\nexport type DefinedRegion = { start: number; end: number };\nexport type TRegion = DefinedRegion | undefined;\n\nexport type AppStatus =\n  | \"idle\"\n  | \"loading\"\n  | \"playingVoice\"\n  | \"recordingVoice\"\n  | \"playingVideo\";\n\nexport type AppState = {\n  status: AppStatus;\n  url: Url;\n  duration: number;\n  progress: number;\n  region: TRegion;\n  playerRef: RefObject<ReactPlayer>;\n};\n\nconst initialState: AppState = {\n  status: \"idle\",\n  url: undefined,\n  duration: 0,\n  progress: 0,\n  region: undefined,\n  playerRef: createRef(),\n};\n\nexport const useAppState = () => {\n  const state$ = useMemo(() => new BehaviorSubject<AppState>(initialState), []);\n\n  const setStatus = useCallback(\n    (status: AppStatus) => {\n      const value = state$.getValue();\n      if (value.region) value.playerRef.current?.seekTo(value.region.start);\n      state$.next({ ...value, status });\n    },\n    [state$]\n  );\n\n  const setUrl = useCallback(\n    (url: Url) => state$.next({ ...state$.getValue(), url }),\n    [state$]\n  );\n\n  const setProgress = useCallback(\n    (progress: number) => {\n      const value = state$.getValue();\n      if (value.region) {\n        if (progress >= value.region.end) {\n          value.playerRef.current?.seekTo(value.region.start);\n          state$.next({\n            ...value,\n            progress: value.region.start,\n            status: \"idle\",\n          });\n          return;\n        }\n      }\n      state$.next({ ...value, progress });\n    },\n    [state$]\n  );\n\n  const setManualProgress = useCallback(\n    (progress: number) => {\n      const value = state$.getValue();\n      value.playerRef.current?.seekTo(progress);\n      state$.next({ ...value, status: \"idle\", progress });\n    },\n    [state$]\n  );\n\n  const setDuration = useCallback(\n    (duration: number) => state$.next({ ...state$.getValue(), duration }),\n    [state$]\n  );\n\n  const setRegion = useCallback(\n    (region: TRegion) => state$.next({ ...state$.getValue(), region }),\n    [state$]\n  );\n\n  useSubscription(state$, console.log);\n\n  return {\n    state$,\n    setStatus,\n    setUrl,\n    setProgress,\n    setManualProgress,\n    setDuration,\n    setRegion,\n  };\n};\n","import React from \"react\";\n\nimport Player from \"./components/player\";\nimport Input from \"./components/input\";\nimport Timebar from \"./components/timebar\";\nimport Controls from \"./components/controls\";\n\nimport Recorder from \"./components/recorder\";\nimport { useAppState } from \"./state\";\n\nfunction App() {\n  const {\n    state$,\n    setUrl,\n    setStatus,\n    setDuration,\n    setProgress,\n    setManualProgress,\n    setRegion,\n  } = useAppState();\n\n  return (\n    <div>\n      <p>https://www.youtube.com/watch?v=EqE_AH39144</p>\n      <p>https://www.youtube.com/watch?v=sS55zq6Hz8A</p>\n      <Input onChange={setUrl} />\n      <Timebar\n        state$={state$}\n        setRegion={setRegion}\n        setProgress={setManualProgress}\n      />\n      <Controls state$={state$} setStatus={setStatus} />\n      <Player\n        state$={state$}\n        setDuration={setDuration}\n        setProgress={setProgress}\n      />\n      <Recorder state$={state$} setStatus={setStatus} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./app\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}