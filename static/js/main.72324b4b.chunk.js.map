{"version":3,"sources":["components/player/index.tsx","components/input/index.tsx","shared/operators/mouse.ts","components/timebar/region/hooks.ts","components/timebar/region/index.tsx","components/timebar/index.tsx","components/controls/index.tsx","components/controls/hooks.ts","shared/hooks/media.ts","components/recorder/index.tsx","app/index.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledReactPlayer","styled","ReactPlayer","Player","React","forwardRef","ref","url$","playing","onDuration","onProgress","_onProgress","useCallback","played","url","useObservableState","controls","volume","progressInterval","Input","onChange","useObservableCallback","event$","pipe","map","e","currentTarget","value","_onChange","onChange$","filter","key","_onEnter","onEnter$","onActualChange$","debounce","race","timer","useSubscription","name","onKeyPress","preventDefault","stopPropagation","globalMouseEventToXDistance","current","clientX","dim","getBoundingClientRect","left","width","globalMouseMove$","fromEvent","document","globalMouseUp$","useRegionResize","region$","containerRef","onRegion","e$","mouse","onMouseDown","mouseDown$","mouseDrag$","useObservable","switchMap","md","mm","takeUntil","updatedRegion$","withLatestFrom","delta","r","finishedUpdating$","take","Rect","rect","Border","Region","props","drag","end","start","useRegionDrag","resizeStart","resizeEnd","merge","undefined","region","onClick","x","Svg","svg","interactable","Marker","Timebar","duration$","progress","appRegion$","svgRef","useRef","duration","v","markerPosition","onWheel","wheel$","onMouseUp","mouseUp$","mousePosRelative$","_onClick","leftClick$","button","rightClick$","throttleTime","holdClick$","regionClear$","_region$","x1","x2","regionEnd$","console","warn","onContextMenu","Container","div","noop","Controls","status","onAction","labels","video","useMemo","recording","playback","useLabels","noAudio","d","videoDisabled","recordingDisabled","playbackDisabled","onAudioClick","event","type","onRecordingClick","onPlaybackClick","disabled","Recorder","refPlayer","useState","blobUrl","setBlobUrl","prevStatus","setPrevStatus","blobOptions","onStop","onStart","onError","onDataAvailable","mediaChunks","mediaStream","mediaRecorder","error","setError","setStatus","mediaBlob","setMediaBlob","isAudioMuted","setIsAudioMuted","getMediaStream","a","window","navigator","mediaDevices","getUserMedia","audio","stream","getAudioTracks","forEach","audioTrack","addTrack","clearMediaStream","getTracks","track","stop","MediaRecorder","mimeType","addEventListener","handleDataAvailable","handleStop","handleError","data","size","push","sampleChunk","blobPropertyBag","Object","assign","blob","Blob","muteAudio","mute","enabled","useEffect","ReferenceError","stopRecording","removeEventListener","startRecording","pauseRecording","state","pause","resumeRecording","resume","unMuteAudio","MediaStream","getVideoTracks","useMediaRecorder","_blobUrl","URL","createObjectURL","src","revokeObjectURL","play","currentTime","onEnded","App","playerRef","u$","onUrlChange","r$","d$","n$","onPlayerProgress","playerProgress$","tap","n","seekTo","onManualProgress","manualProgress$","progress$","a$","onControlAction","regionEndAutomatically$","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.72324b4b.chunk.js","sourcesContent":["import { useObservableState } from \"observable-hooks\";\nimport React, { useCallback } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { Observable } from \"rxjs\";\nimport styled from \"styled-components\";\n\ninterface PlayerProps {\n  url$: Observable<string | undefined>;\n  playing: boolean;\n  onDuration: (n: number) => void;\n  onProgress: (n: number) => void;\n}\n\nconst StyledReactPlayer = styled(ReactPlayer)`\n  pointer-events: none;\n`;\n\nconst Player = React.forwardRef<ReactPlayer, PlayerProps>(\n  ({ url$, playing, onDuration, onProgress }, ref) => {\n    const _onProgress = useCallback(({ played }) => onProgress(played), [\n      onProgress,\n    ]);\n\n    const url = useObservableState(url$);\n\n    return (\n      <StyledReactPlayer\n        ref={ref}\n        url={url}\n        playing={playing}\n        controls={false}\n        onDuration={onDuration}\n        onProgress={_onProgress}\n        volume={1}\n        progressInterval={100}\n      />\n    );\n  }\n);\n\nexport default Player;\n","import { useObservableCallback, useSubscription } from \"observable-hooks\";\nimport React, { KeyboardEvent } from \"react\";\nimport { race, timer } from \"rxjs\";\nimport { debounce, filter, map } from \"rxjs/operators\";\n\ninterface InputProps {\n  onChange: (s: string) => void;\n}\n\nconst Input: React.FC<InputProps> = ({ onChange }) => {\n  const [_onChange, onChange$] = useObservableCallback<\n    string,\n    React.ChangeEvent<HTMLInputElement>\n  >((event$) => event$.pipe(map((e) => e.currentTarget.value)));\n\n  const [_onEnter, onEnter$] = useObservableCallback<\n    string,\n    KeyboardEvent<HTMLInputElement>\n  >((event$) =>\n    event$.pipe(\n      filter((e) => e.key === \"Enter\"),\n      map((e) => e.currentTarget.value)\n    )\n  );\n\n  const onActualChange$ = onChange$.pipe(\n    debounce(() => race(timer(1000), onEnter$))\n  );\n\n  useSubscription(onActualChange$, onChange);\n\n  return <input name=\"youtube url\" onChange={_onChange} onKeyPress={_onEnter} />;\n};\n\nexport default Input;\n","import { RefObject, SyntheticEvent } from \"react\";\nimport { fromEvent, OperatorFunction } from \"rxjs\";\nimport { distinctUntilChanged, filter, map } from \"rxjs/operators\";\n\nexport const preventDefault = <T extends SyntheticEvent>(e: T): T => {\n  e.preventDefault();\n  return e;\n};\n\nexport const stopPropagation = <T extends SyntheticEvent>(e: T): T => {\n  e.stopPropagation();\n  return e;\n};\n\nexport const globalMouseEventToXDistance = <T extends Element>(\n  ref: RefObject<T>\n) => (e: React.MouseEvent): number => {\n  if (!ref.current) return 0;\n  const { clientX } = e;\n  const dim = ref.current.getBoundingClientRect();\n  const x = clientX - dim.left;\n  return x / dim.width;\n};\n\nexport const localMouseEventToXDistance = <T extends Element>(\n  e: React.MouseEvent<T, MouseEvent>\n): number => {\n  const { target, clientX } = e;\n  const dim = (target as Element).getBoundingClientRect();\n  const x = clientX - dim.left;\n  return x / dim.width;\n};\n\nexport const globalMouseMove$ = fromEvent<React.MouseEvent>(\n  document,\n  \"mousemove\"\n);\n\nexport const globalMouseDown$ = fromEvent<React.MouseEvent>(\n  document,\n  \"mousedown\"\n);\n\nexport const globalMouseUp$ = fromEvent<React.MouseEvent>(\n  document,\n  \"mouseup\"\n);\n\nexport const mousePosRelative$ = <T extends Element>(ref: RefObject<T>) =>\n  globalMouseMove$.pipe(\n    map(globalMouseEventToXDistance(ref)),\n    filter((v) => v !== undefined) as OperatorFunction<\n      number | undefined,\n      number\n    >,\n    distinctUntilChanged()\n  );\n","import React, { RefObject, useRef } from \"react\";\nimport { combineLatest, merge, Observable, of } from \"rxjs\";\nimport {\n  useObservable,\n  useObservableCallback,\n  useObservableState,\n  useSubscription,\n} from \"observable-hooks\";\n\nimport * as mouse from \"../../../shared/operators/mouse\";\nimport {\n  map,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n  withLatestFrom,\n} from \"rxjs/operators\";\n\nexport interface Region { start: number; end: number } \nexport type TRegion = Region | undefined;\n\nexport interface UseRegionDragInput {\n  region$: Observable<TRegion>;\n  containerRef: RefObject<SVGSVGElement>;\n  onRegion: (r: TRegion) => void;\n}\n\nexport interface UseRegionDragOutput {\n  updatedRegion$: Observable<TRegion>;\n  onMouseDown: (e: React.MouseEvent<SVGRectElement, MouseEvent>) => void;\n}\n\nexport const useRegionDrag = ({\n  region$,\n  containerRef,\n  onRegion,\n}: UseRegionDragInput): UseRegionDragOutput => {\n  const [onMouseDown, mouseDown$] = useObservableCallback<\n    React.MouseEvent<SVGRectElement, MouseEvent>\n  >((e$) => e$.pipe(map(mouse.stopPropagation)));\n\n  const mouseDrag$ = useObservable(() =>\n    mouseDown$.pipe(\n      map(mouse.preventDefault),\n      switchMap((md) =>\n        mouse.globalMouseMove$.pipe(\n          map((mm) => {\n            mm.preventDefault();\n            if (!containerRef.current) return 0;\n            const dim = containerRef.current.getBoundingClientRect();\n            const deltaX = mm.clientX - md.clientX;\n            return deltaX / dim.width;\n          }),\n          takeUntil(mouse.globalMouseUp$)\n        )\n      )\n    )\n  );\n\n  const updatedRegion$ = useObservable<TRegion>(() =>\n    mouseDrag$.pipe(\n      withLatestFrom(region$),\n      map(([delta, r]) => {\n        if (!r) return r;\n        return { end: r.end + delta, start: r.start + delta };\n      })\n    )\n  );\n\n  const finishedUpdating$ = useObservable<TRegion>(() =>\n    updatedRegion$.pipe(\n      switchMap((r) =>\n        mouse.globalMouseUp$.pipe(\n          take(1),\n          map(() => r)\n        )\n      )\n    )\n  );\n\n  useSubscription(finishedUpdating$, onRegion);\n  return { updatedRegion$, onMouseDown };\n};\n\n\nexport interface UseRegionResize {\n  region$: Observable<TRegion>;\n  containerRef: RefObject<SVGSVGElement>;\n  onRegion: (r: TRegion) => void;\n  key: keyof Region\n}\n\nexport interface UseRegionResizeOutput {\n  updatedRegion$: Observable<TRegion>;\n  onMouseDown: (e: React.MouseEvent<SVGRectElement, MouseEvent>) => void;\n}\n\nexport const useRegionResize = ({\n  region$,\n  containerRef,\n  onRegion,\n  key,\n}: UseRegionResize): UseRegionResizeOutput => {\n  const [onMouseDown, mouseDown$] = useObservableCallback<\n    React.MouseEvent<SVGRectElement, MouseEvent>\n  >((e$) => e$.pipe(map(mouse.stopPropagation)));\n\n  const mouseDrag$ = useObservable(() =>\n    mouseDown$.pipe(\n      map(mouse.preventDefault),\n      switchMap((md) =>\n        mouse.globalMouseMove$.pipe(\n          map((mm) => {\n            mm.preventDefault();\n            if (!containerRef.current) return 0;\n            const dim = containerRef.current.getBoundingClientRect();\n            const deltaX = mm.clientX - md.clientX;\n            return deltaX / dim.width;\n          }),\n          takeUntil(mouse.globalMouseUp$)\n        )\n      )\n    )\n  );\n\n  const updatedRegion$ = useObservable<TRegion>(() =>\n    mouseDrag$.pipe(\n      withLatestFrom(region$),\n      map(([delta, r]) => {\n        if (!r) return r;\n        return { ...r, [key]: r[key] + delta };\n      })\n    )\n  );\n\n  const finishedUpdating$ = useObservable<TRegion>(() =>\n    updatedRegion$.pipe(\n      switchMap((r) =>\n        mouse.globalMouseUp$.pipe(\n          take(1),\n          map(() => r)\n        )\n      )\n    )\n  );\n\n  useSubscription(finishedUpdating$, onRegion);\n  return { updatedRegion$, onMouseDown };\n};\n","import React, { RefObject, useRef } from \"react\";\nimport { combineLatest, merge, Observable, of } from \"rxjs\";\nimport {\n  useObservable,\n  useObservableCallback,\n  useObservableState,\n  useSubscription,\n} from \"observable-hooks\";\nimport styled from \"styled-components\";\n\nimport * as mouse from \"../../../shared/operators/mouse\";\nimport {\n  map,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n  withLatestFrom,\n} from \"rxjs/operators\";\nimport { useRegionDrag, useRegionResize } from \"./hooks\";\n\nconst Rect = styled.rect`\n  height: 100%;\n  fill: rgba(0, 0, 0, 0.25);\n  stroke: rgba(0, 0, 0, 0.25);\n  cursor: all-scroll;\n`;\n\nconst Border = styled.rect`\n  height: 100%;\n  width: 1px;\n  fill: rgba(0,0,0,0.5);\n  cursor: col-resize;\n`;\n\nexport type TRegion = { start: number; end: number } | undefined;\n\nexport interface RegionProps {\n  region$: Observable<TRegion>;\n  containerRef: RefObject<SVGSVGElement>;\n  onRegion: (r: TRegion) => void;\n}\n\nconst Region: React.FC<RegionProps> = (props) => {\n  const { region$, containerRef, onRegion } = props;\n  const drag = useRegionDrag(props);\n  const resizeStart = useRegionResize({ ...props, key: \"start\" });\n  const resizeEnd = useRegionResize({ ...props, key: \"end\" });\n\n  const [region] = useObservableState<TRegion>(\n    () =>\n      merge(\n        region$,\n        drag.updatedRegion$,\n        resizeStart.updatedRegion$,\n        resizeEnd.updatedRegion$\n      ),\n    undefined\n  );\n\n  if (region === undefined) return null;\n  return (\n    <>\n      <Rect\n        onClick={(e) => e.stopPropagation()}\n        onMouseDown={drag.onMouseDown}\n        x={`${region.start * 100}%`}\n        width={`${(region.end - region.start) * 100}%`}\n      />\n      <Border\n        x={`${region.start * 100}%`}\n        onClick={(e) => e.stopPropagation()}\n        onMouseDown={resizeStart.onMouseDown}\n      />\n      <Border\n        x={`${region.end * 100}%`}\n        onClick={(e) => e.stopPropagation()}\n        onMouseDown={resizeEnd.onMouseDown}\n      />\n    </>\n  );\n};\n\nexport default Region;\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { merge, Observable, OperatorFunction, timer } from \"rxjs\";\nimport {\n  useObservable,\n  useObservableCallback,\n  useObservableState,\n  useSubscription,\n} from \"observable-hooks\";\nimport {\n  filter,\n  map,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n  throttleTime,\n  withLatestFrom,\n} from \"rxjs/operators\";\nimport * as mouse from \"../../shared/operators/mouse\";\n\nimport Region, { TRegion } from \"./region\";\n\ninterface TimebarProps {\n  duration$: Observable<number | undefined>;\n  progress: Observable<number>;\n  onClick: (x: number) => void;\n  onRegion: (r: TRegion) => void;\n  appRegion$: Observable<TRegion>;\n}\n\nconst Svg = styled.svg<{ interactable: boolean }>`\n  width: 100%;\n  height: 2rem;\n  background-color: rgb(240, 240, 240);\n  cursor: ${({ interactable }) => (interactable ? \"pointer\" : \"auto\")};\n  pointer-events: ${({ interactable }) => (interactable ? \"all\" : \"none\")};\n`;\n\nconst Marker = styled.rect`\n  width: 1px;\n  height: 100%;\n  fill: rgb(10, 10, 10);\n`;\n\nconst Timebar: React.FC<TimebarProps> = ({\n  duration$,\n  progress,\n  onClick,\n  onRegion,\n  appRegion$,\n}) => {\n  const svgRef = useRef(null);\n  const duration = useObservableState(duration$);\n  const [markerPosition] = useObservableState<string>(\n    () =>\n      progress.pipe(\n        map((v) => {\n          if (!v) return \"0px\";\n          return `${v * 100}%`;\n        })\n      ),\n    \"0px\"\n  );\n\n  const [onWheel, wheel$] = useObservableCallback<\n    React.MouseEvent<SVGSVGElement, WheelEvent>\n  >((e$) =>\n    e$.pipe(\n      map((e) => {\n        e.stopPropagation();\n        return e;\n      })\n    )\n  );\n\n  const [onMouseDown, mouseDown$] = useObservableCallback<\n    React.MouseEvent<SVGSVGElement, MouseEvent>\n  >((e$) => e$.pipe(map(mouse.preventDefault)));\n\n  const [onMouseUp, mouseUp$] = useObservableCallback<\n    React.MouseEvent<SVGSVGElement, MouseEvent>\n  >((e$) => e$.pipe(map(mouse.preventDefault)));\n\n  const mousePosRelative$ = mouse.globalMouseMove$.pipe(\n    map(mouse.globalMouseEventToXDistance(svgRef)),\n    filter((v) => v !== undefined) as OperatorFunction<\n      number | undefined,\n      number\n    >\n  );\n\n  const [_onClick, click$] = useObservableCallback<\n    React.MouseEvent<SVGSVGElement, MouseEvent>\n  >((e$) => e$);\n\n  const leftClick$ = click$.pipe(\n    filter((e) => e.button === 0),\n    map(mouse.globalMouseEventToXDistance(svgRef))\n  );\n\n  const rightClick$ = mouseDown$.pipe(\n    filter((e) => e.button === 2),\n    throttleTime(500)\n  );\n\n  const holdClick$ = mouseDown$.pipe(\n    switchMap((e) =>\n      timer(100).pipe(\n        takeUntil(mouseUp$),\n        map(() => mouse.globalMouseEventToXDistance(svgRef)(e))\n      )\n    )\n  );\n\n  const regionClear$ = rightClick$.pipe(map(() => undefined));\n\n  const _region$: Observable<TRegion> = merge(\n    holdClick$.pipe(\n      switchMap((x1) =>\n        mousePosRelative$.pipe(\n          map((x2) => {\n            if (x1 > x2) return { start: x2, end: x1 };\n            else return { start: x1, end: x2 };\n          }),\n          takeUntil(mouseUp$)\n        )\n      )\n    ),\n    regionClear$\n  );\n\n  const regionEnd$ = holdClick$.pipe(\n    switchMap(() => mouseUp$.pipe(take(1))),\n    withLatestFrom(_region$),\n    map(([_, r]) => r)\n  );\n\n  useSubscription(leftClick$, onClick);\n  useSubscription(regionEnd$, onRegion);\n  useSubscription(regionClear$, onRegion);\n  useSubscription(wheel$, () => console.warn(\"WHEEL\"));\n\n  const region$ = useObservable(() => merge(appRegion$, _region$));\n\n  return (\n    <>\n      <Svg\n        ref={svgRef}\n        onContextMenu={(e) => e.preventDefault()}\n        onClick={_onClick}\n        onMouseUp={onMouseUp}\n        onMouseDown={onMouseDown}\n        onWheel={onWheel}\n        interactable={duration !== undefined}\n      >\n        <Marker x={markerPosition} />\n        <Region region$={region$} containerRef={svgRef} onRegion={onRegion} />\n      </Svg>\n    </>\n  );\n};\n\nexport default Timebar;\n","import { useObservableState } from \"observable-hooks\";\nimport React, { useCallback, useMemo } from \"react\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport styled from \"styled-components\";\nimport { Status } from \"../../app\";\nimport { useLabels } from \"./hooks\";\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\ninterface ControlProps {\n  duration$: Observable<number | undefined>;\n  status: Status;\n  onAction: (action: ControlAction) => void;\n}\n\nexport type ControlActionType =\n  | \"VideoStartedPlaying\"\n  | \"VideoStoppedPlaying\"\n  | \"VoiceStartedRecording\"\n  | \"VoiceStoppedRecording\"\n  | \"VoiceStartedPlaying\"\n  | \"VoiceStoppedPlaying\";\n\nexport type ControlAction = { type: ControlActionType; event?: any };\n\nconst noop = (...args: any[]): void => {};\n\nconst Controls: React.FC<ControlProps> = ({ status, onAction, duration$ }) => {\n  const labels = useLabels(status);\n  const noAudio = useObservableState(\n    duration$.pipe(map((d) => d === undefined)),\n    false\n  );\n\n  const videoDisabled = useMemo(\n    () => noAudio || status === \"Recording\" || status === \"PlayingVoice\",\n    [noAudio, status]\n  );\n\n  const recordingDisabled = useMemo(\n    () => noAudio || status === \"PlayingVideo\" || status === \"PlayingVoice\",\n    [noAudio, status]\n  );\n\n  const playbackDisabled = useMemo(\n    () => noAudio || status === \"PlayingVideo\" || status === \"Recording\",\n    [noAudio, status]\n  );\n\n  const onAudioClick = useCallback(\n    (event) => {\n      if (status === \"PlayingVideo\") {\n        onAction({ type: \"VideoStoppedPlaying\", event });\n      } else {\n        onAction({ type: \"VideoStartedPlaying\", event });\n      }\n    },\n    [status, onAction]\n  );\n\n  const onRecordingClick = useCallback(\n    (event) => {\n      if (status === \"Recording\") {\n        onAction({ type: \"VoiceStoppedRecording\", event });\n      } else {\n        onAction({ type: \"VoiceStartedRecording\", event });\n      }\n    },\n    [status, onAction]\n  );\n\n  const onPlaybackClick = useCallback(\n    (event) => {\n      if (status === \"PlayingVoice\") {\n        onAction({ type: \"VoiceStoppedPlaying\", event });\n      } else {\n        onAction({ type: \"VoiceStartedPlaying\", event });\n      }\n    },\n    [status, onAction]\n  );\n\n  return (\n    <Container>\n      <button\n        disabled={videoDisabled}\n        onClick={videoDisabled ? noop : onAudioClick}\n      >\n        {labels.video}\n      </button>\n      <button\n        disabled={recordingDisabled}\n        onClick={recordingDisabled ? noop : onRecordingClick}\n      >\n        {labels.recording}\n      </button>\n      <button\n        disabled={playbackDisabled}\n        onClick={playbackDisabled ? noop : onPlaybackClick}\n      >\n        {labels.playback}\n      </button>\n    </Container>\n  );\n};\n\nexport default Controls;\n","import { useMemo } from \"react\";\nimport { Status } from \"../../app\";\n\nexport const useLabels = (status: Status) => {\n  const video = useMemo(() => (status === \"PlayingVideo\" ? \"Stop\" : \"Play\"), [\n    status,\n  ]);\n  const recording = useMemo(\n    () => (status === \"Recording\" ? \"Stop recording\" : \"Start recording\"),\n    [status]\n  );\n  const playback = useMemo(\n    () => (status === \"PlayingVoice\" ? \"Stop voice\" : \"Play Voice\"),\n    [status]\n  );\n\n  return { video, recording, playback };\n};\n","import React from \"react\";\n\nconst noop = () => {};\n\nexport interface UseMediaRecorder {\n  blobOptions?: Partial<BlobPropertyBag>;\n  onStop?: (b: Blob) => void;\n  onStart?: VoidFunction;\n  onError?: (e: DOMException) => void;\n  onDataAvailable?: (b: Blob) => void;\n}\n\nexport function useMediaRecorder({\n  blobOptions = {},\n  onStop = noop,\n  onStart = noop,\n  onError = noop,\n  onDataAvailable = noop,\n}: UseMediaRecorder) {\n  let mediaChunks = React.useRef<Blob[]>([]);\n  let mediaStream = React.useRef<MediaStream | null>(null);\n  let mediaRecorder = React.useRef<MediaRecorder | null>(null);\n  let [error, setError] = React.useState<Error | null>(null);\n  let [status, setStatus] = React.useState(\"idle\");\n  let [mediaBlob, setMediaBlob] = React.useState<Blob | null>(null);\n  let [isAudioMuted, setIsAudioMuted] = React.useState(false);\n\n  async function getMediaStream() {\n    if (error) {\n      setError(null);\n    }\n\n    setStatus(\"acquiring_media\");\n\n    try {\n      const stream = await window.navigator.mediaDevices.getUserMedia({\n        audio: true,\n      });\n\n      stream\n        .getAudioTracks()\n        .forEach((audioTrack) => stream.addTrack(audioTrack));\n\n      mediaStream.current = stream;\n      setStatus(\"ready\");\n    } catch (err) {\n      setError(err);\n      setStatus(\"failed\");\n    }\n  }\n\n  function clearMediaStream() {\n    if (mediaStream.current) {\n      mediaStream.current.getTracks().forEach((track) => track.stop());\n      mediaStream.current = null;\n    }\n  }\n\n  async function startRecording() {\n    if (error) {\n      setError(null);\n    }\n\n    if (!mediaStream.current) {\n      await getMediaStream();\n    }\n\n    mediaChunks.current = [];\n\n    if (mediaStream.current) {\n      mediaRecorder.current = new MediaRecorder(mediaStream.current, {\n        mimeType: \"audio/webm\",\n      });\n      mediaRecorder.current.addEventListener(\n        \"dataavailable\",\n        handleDataAvailable\n      );\n      mediaRecorder.current.addEventListener(\"stop\", handleStop);\n      mediaRecorder.current.addEventListener(\"error\", handleError);\n      mediaRecorder.current.start();\n      setStatus(\"recording\");\n      onStart();\n    }\n  }\n\n  function handleDataAvailable(e: BlobEvent) {\n    if (e.data.size) {\n      mediaChunks.current.push(e.data);\n    }\n    onDataAvailable(e.data);\n  }\n\n  function handleStop() {\n    let [sampleChunk] = mediaChunks.current;\n    const type = sampleChunk ? sampleChunk.type : \"audio/webm\";\n    let blobPropertyBag = Object.assign({ type }, blobOptions);\n    let blob = new Blob(mediaChunks.current, blobPropertyBag);\n\n    setMediaBlob(blob);\n    setStatus(\"stopped\");\n    onStop(blob);\n  }\n\n  function handleError(e: MediaRecorderErrorEvent) {\n    setError(e.error);\n    setStatus(\"idle\");\n    onError(e.error);\n  }\n\n  function muteAudio(mute: boolean) {\n    setIsAudioMuted(mute);\n\n    if (mediaStream.current) {\n      mediaStream.current.getAudioTracks().forEach((audioTrack) => {\n        audioTrack.enabled = !mute;\n      });\n    }\n  }\n\n  function pauseRecording() {\n    if (mediaRecorder.current && mediaRecorder.current.state === \"recording\") {\n      mediaRecorder.current.pause();\n    }\n  }\n\n  function resumeRecording() {\n    if (mediaRecorder.current && mediaRecorder.current.state === \"paused\") {\n      mediaRecorder.current.resume();\n    }\n  }\n\n  function stopRecording() {\n    if (mediaRecorder.current) {\n      setStatus(\"stopping\");\n      mediaRecorder.current.stop();\n      // not sure whether to place clean up in useEffect?\n      // If placed in useEffect the handler functions become dependencies of useEffect\n      mediaRecorder.current.removeEventListener(\n        \"dataavailable\",\n        handleDataAvailable\n      );\n      mediaRecorder.current.removeEventListener(\"stop\", handleStop);\n      mediaRecorder.current.removeEventListener(\"error\", handleError);\n      mediaRecorder.current = null;\n      clearMediaStream();\n    }\n  }\n\n  React.useEffect(() => {\n    if (!window.MediaRecorder) {\n      throw new ReferenceError(\n        \"MediaRecorder is not supported in this browser. Please ensure that you are running the latest version of chrome/firefox/edge.\"\n      );\n    }\n  }, []);\n\n  return {\n    error,\n    status,\n    mediaBlob,\n    isAudioMuted,\n    stopRecording,\n    getMediaStream,\n    startRecording,\n    pauseRecording,\n    resumeRecording,\n    clearMediaStream,\n    muteAudio: () => muteAudio(true),\n    unMuteAudio: () => muteAudio(false),\n    get liveStream() {\n      if (mediaStream.current) {\n        return new MediaStream(mediaStream.current.getVideoTracks());\n      }\n      return null;\n    },\n  };\n}\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Status } from \"../../app\";\nimport { useMediaRecorder } from \"../../shared/hooks/media\";\nimport { ControlAction } from \"../controls\";\n\ninterface RecorderProps {\n  disabled: boolean;\n  status: Status;\n  onAction: (a: ControlAction) => void;\n}\n\nconst Recorder: React.FC<RecorderProps> = ({ disabled, onAction, status }) => {\n  const refPlayer = useRef<HTMLAudioElement>(null);\n  const [blobUrl, setBlobUrl] = useState<string | undefined>(undefined);\n  const [prevStatus, setPrevStatus] = useState<Status>(status);\n\n  const onStop = useCallback(\n    (blob: Blob) => {\n      if (refPlayer.current) {\n        const _blobUrl = URL.createObjectURL(blob);\n        refPlayer.current.src = _blobUrl;\n        setBlobUrl(_blobUrl);\n        onAction({ type: \"VoiceStoppedRecording\" });\n      }\n    },\n    [onAction, setBlobUrl, refPlayer]\n  );\n\n  const { startRecording, stopRecording } = useMediaRecorder({ onStop });\n\n  useEffect(() => {\n    setPrevStatus(status);\n  }, [status]);\n\n  useEffect(() => {\n    if (status === \"Recording\") {\n      startRecording();\n      URL.revokeObjectURL(blobUrl || \"\");\n      setBlobUrl(undefined);\n    }\n    if (status !== \"Recording\" && prevStatus === \"Recording\") stopRecording();\n  }, [status, prevStatus, startRecording, stopRecording, setBlobUrl, blobUrl]);\n\n  useEffect(() => {\n    if (refPlayer.current) {\n      if (status === \"PlayingVoice\") refPlayer.current.play();\n      if (prevStatus === \"PlayingVoice\" && status !== \"PlayingVoice\") {\n        refPlayer.current.pause();\n        refPlayer.current.currentTime = 0;\n      }\n    }\n  }, [status, prevStatus]);\n\n  const onEnded = useCallback(() => {\n    if (refPlayer.current) {\n      refPlayer.current.pause();\n      refPlayer.current.currentTime = 0;\n      onAction({ type: \"VoiceStoppedPlaying\" });\n    }\n  }, [refPlayer, onAction]);\n\n  return <audio ref={refPlayer} onEnded={onEnded} />;\n};\n\nexport default Recorder;\n","import React, { useEffect, useRef } from \"react\";\n\nimport Player from \"../components/player\";\nimport Input from \"../components/input\";\nimport Timebar from \"../components/timebar\";\nimport Controls, { ControlAction } from \"../components/controls\";\n\nimport {\n  useObservable,\n  useObservableCallback,\n  useObservableState,\n  useSubscription,\n} from \"observable-hooks\";\nimport { filter, map, tap, throttleTime, withLatestFrom } from \"rxjs/operators\";\nimport { merge, OperatorFunction } from \"rxjs\";\nimport ReactPlayer from \"react-player\";\nimport Recorder from \"../components/recorder\";\n\ntype Region = { start: number; end: number };\ntype TRegion = Region | undefined;\n\nexport type Status = \"PlayingVideo\" | \"PlayingVoice\" | \"Recording\" | \"Idle\";\n\nfunction App() {\n  const playerRef = useRef<ReactPlayer>(null);\n\n  const [onUrlChange, url$] = useObservableCallback<string | undefined>(\n    (u$) => u$,\n    undefined\n  );\n\n  const [onRegion, region$] = useObservableCallback<TRegion>((r$) => r$);\n\n  const [onDuration, duration$] = useObservableCallback<number | undefined>(\n    (d$) => d$\n  );\n\n  const [onPlayerProgress, playerProgress$] = useObservableCallback<number>(\n    (n$) => n$\n  );\n\n  const [onManualProgress, manualProgress$] = useObservableCallback<number>(\n    (n$) => n$.pipe(tap((n) => playerRef.current?.seekTo(n)))\n  );\n\n  const progress$ = merge(playerProgress$, manualProgress$).pipe(\n    throttleTime(100)\n  );\n\n  const [status, onControlAction] = useObservableState<Status, ControlAction>(\n    (a$) =>\n      a$.pipe(\n        withLatestFrom(region$),\n        map(([{ type }, r]) => {\n          switch (type) {\n            case \"VideoStartedPlaying\":\n              if (r) playerRef.current?.seekTo(r.start)\n              return \"PlayingVideo\";\n            case \"VoiceStartedPlaying\":\n              return \"PlayingVoice\";\n            case \"VoiceStartedRecording\":\n              return \"Recording\";\n            case \"VideoStoppedPlaying\":\n            case \"VoiceStoppedPlaying\":\n            case \"VoiceStoppedRecording\":\n            default:\n              return \"Idle\";\n          }\n        })\n      ),\n    \"Idle\"\n  );\n\n  const regionEndAutomatically$ = useObservable<Region>(() =>\n    playerProgress$.pipe(\n      withLatestFrom(region$),\n      filter(([, r]) => r !== undefined) as OperatorFunction<\n        [number, TRegion],\n        [number, Region]\n      >,\n      filter(([v, r]) => v >= r.end),\n      map(([, r]) => r)\n    )\n  );\n\n  useSubscription(regionEndAutomatically$, (r) => {\n    onControlAction({ type: \"VideoStoppedPlaying\" });\n    playerRef.current?.seekTo(r.start);\n  });\n\n  return (\n    <div>\n      <p>https://www.youtube.com/watch?v=EqE_AH39144</p>\n      <p>https://www.youtube.com/watch?v=sS55zq6Hz8A</p>\n      <Input onChange={onUrlChange} />\n      <Timebar\n        duration$={duration$}\n        progress={progress$}\n        onClick={onManualProgress}\n        onRegion={onRegion}\n        appRegion$={region$}\n      />\n      <Controls\n        status={status}\n        onAction={onControlAction}\n        duration$={duration$}\n      />\n      <Player\n        ref={playerRef}\n        url$={url$}\n        onDuration={onDuration}\n        onProgress={onPlayerProgress}\n        playing={status === \"PlayingVideo\"}\n      />\n      <Recorder disabled={false} status={status} onAction={onControlAction} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./app\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}