{"version":3,"sources":["app/components/player/index.tsx","app/components/input/index.tsx","shared/operators/mouse.ts","app/components/timebar/region/hooks.ts","app/components/timebar/region/index.tsx","app/components/timebar/axis/index.tsx","shared/hooks/browser.ts","app/components/timebar/marker/index.tsx","app/components/timebar/index.tsx","app/components/controls/utils.ts","app/components/controls/index.tsx","shared/hooks/media.ts","app/components/recorder/index.tsx","app/state.ts","app/index.tsx","app/hooks.ts","reportWebVitals.ts","index.tsx"],"names":["PlayerWrapper","styled","div","StyledReactPlayer","ReactPlayer","Player","url$","status$","playerRef$","setProgress","setDuration","useObservableState","ref","url","pipe","map","status","playing","_setProgress","useCallback","played","controls","onDuration","onProgress","volume","progressInterval","InputWrapper","StyledInput","input","Input","onChange","useObservableCallback","event$","e","currentTarget","value","_onChange","onChange$","filter","key","_onEnter","onEnter$","onActualChange$","useObservable","debounce","race","timer","useSubscription","name","type","autoComplete","onKeyPress","preventDefault","stopPropagation","globalMouseEventToXDistance","current","clientX","dim","getBoundingClientRect","left","width","globalMouseMove$","fromEvent","document","globalMouseUp$","useRegionResize","region$","containerRef","onRegion","e$","mouse","onMouseDown","mouseDown$","mouseDrag$","switchMap","md","mm","takeUntil","updatedRegion$","withLatestFrom","delta","r","finishedUpdating$","take","Rect","rect","Border","Region","props","drag","end","start","useRegionDrag","resizeStart","resizeEnd","merge","undefined","region","onClick","x","Group","g","Tick","TickLabel","text","toDateTime","secs","t","Date","setSeconds","Axis","duration$","windowSize","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","scale$","d","scaleTime","domain","range","scale","ticks","tick","i","label","getHours","format","y","textAnchor","valueOf","Ticks","String","StyledRect","Marker","progress$","v","markerPosition","Svg","svg","interactable","Timebar","setRegion","svgRef","useRef","useEffect","videoLoaded","onMouseUp","mouseUp$","mousePosRelative$","_onClick","leftClick$","button","rightClick$","throttleTime","holdClick$","regionClear$","_region$","x1","x2","regionEnd$","mergedRegion$","onContextMenu","getLabels","video","recording","playback","Container","noop","Controls","setStatus","labels","videoEnabled","recordingEnabled","playbackEnabled","$e","onVideoClick","videoClick$","onRecordingClick","recordingClick$","onPlaybackClick","playbackClick$","disabled","Recorder","refAudio","statusPair$","pairwise","blobUrl","setBlobUrl","blobOptions","onStop","onStart","onError","onDataAvailable","mediaChunks","React","mediaStream","mediaRecorder","error","setError","mediaBlob","setMediaBlob","isAudioMuted","setIsAudioMuted","getMediaStream","a","navigator","mediaDevices","getUserMedia","audio","stream","getAudioTracks","forEach","audioTrack","addTrack","clearMediaStream","getTracks","track","stop","handleDataAvailable","data","push","handleStop","sampleChunk","blobPropertyBag","Object","assign","blob","Blob","handleError","startRecording","MediaRecorder","mimeType","muteAudio","mute","enabled","pauseRecording","state","pause","resumeRecording","resume","stopRecording","console","warn","ReferenceError","unMuteAudio","MediaStream","getVideoTracks","useMediaRecorder","_blobUrl","URL","createObjectURL","src","statusPrev","revokeObjectURL","play","currentTime","onEnded","initialState","duration","progress","playerRef","createRef","App","state$","useMemo","BehaviorSubject","getValue","seekTo","next","setUrl","setManualProgress","useAppState","setters","s","distinctUntilChanged","usePartitionedState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.93cde4fb.chunk.js","sourcesContent":["import React, { RefObject, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useObservableState } from \"observable-hooks\";\nimport ReactPlayer from \"react-player\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { AppStatus, Url } from \"../../state\";\n\ninterface PlayerProps {\n  url$: Observable<Url>;\n  status$: Observable<AppStatus>;\n  playerRef$: Observable<RefObject<ReactPlayer>>;\n  setProgress: (progress: number) => void;\n  setDuration: (progress: number) => void;\n}\n\nconst PlayerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledReactPlayer = styled(ReactPlayer)`\n  pointer-events: none;\n`;\n\nconst Player: React.FC<PlayerProps> = ({\n  url$,\n  status$,\n  playerRef$,\n  setProgress,\n  setDuration,\n}) => {\n  const [ref] = useObservableState(() => playerRef$);\n  const [url] = useObservableState(() => url$);\n  const [playing] = useObservableState(() =>\n    status$.pipe(map((status) => status === \"playingVideo\"))\n  );\n  const _setProgress = useCallback(({ played }) => setProgress(played), [\n    setProgress,\n  ]);\n\n  return (\n    <PlayerWrapper>\n      <StyledReactPlayer\n        ref={ref}\n        url={url}\n        playing={playing}\n        controls={false}\n        onDuration={setDuration}\n        onProgress={_setProgress}\n        volume={1}\n        progressInterval={100}\n      />\n    </PlayerWrapper>\n  );\n};\n\nexport default Player;\n","import React, { KeyboardEvent } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  useObservable,\n  useObservableCallback,\n  useSubscription,\n} from \"observable-hooks\";\nimport { race, timer } from \"rxjs\";\nimport { debounce, filter, map } from \"rxjs/operators\";\n\ninterface InputProps {\n  onChange: (s: string) => void;\n}\n\nconst InputWrapper = styled.div`\n  margin: 1rem 0;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledInput = styled.input`\n  width: 20rem;\n  text-align: center;\n`;\n\nconst Input: React.FC<InputProps> = ({ onChange }) => {\n  const [_onChange, onChange$] = useObservableCallback<\n    string,\n    React.ChangeEvent<HTMLInputElement>\n  >((event$) => event$.pipe(map((e) => e.currentTarget.value)));\n\n  const [_onEnter, onEnter$] = useObservableCallback<\n    string,\n    KeyboardEvent<HTMLInputElement>\n  >((event$) =>\n    event$.pipe(\n      filter((e) => e.key === \"Enter\"),\n      map((e) => e.currentTarget.value)\n    )\n  );\n\n  const onActualChange$ = useObservable(() =>\n    onChange$.pipe(debounce(() => race(timer(1000), onEnter$)))\n  );\n\n  useSubscription(onActualChange$, onChange);\n\n  return (\n    <InputWrapper>\n      <StyledInput\n        name=\"youtube\"\n        type=\"text\"\n        autoComplete=\"on\"\n        onChange={_onChange}\n        onKeyPress={_onEnter}\n      />\n    </InputWrapper>\n  );\n};\n\nexport default Input;\n","import { RefObject, SyntheticEvent } from \"react\";\nimport { fromEvent, OperatorFunction } from \"rxjs\";\nimport { distinctUntilChanged, filter, map } from \"rxjs/operators\";\n\nexport const preventDefault = <T extends SyntheticEvent>(e: T): T => {\n  e.preventDefault();\n  return e;\n};\n\nexport const stopPropagation = <T extends SyntheticEvent>(e: T): T => {\n  e.stopPropagation();\n  return e;\n};\n\nexport const globalMouseEventToXDistance = <T extends Element>(\n  ref: RefObject<T>\n) => (e: React.MouseEvent): number => {\n  if (!ref.current) return 0;\n  const { clientX } = e;\n  const dim = ref.current.getBoundingClientRect();\n  const x = clientX - dim.left;\n  return x / dim.width;\n};\n\nexport const localMouseEventToXDistance = <T extends Element>(\n  e: React.MouseEvent<T, MouseEvent>\n): number => {\n  const { target, clientX } = e;\n  const dim = (target as Element).getBoundingClientRect();\n  const x = clientX - dim.left;\n  return x / dim.width;\n};\n\nexport const globalMouseMove$ = fromEvent<React.MouseEvent>(\n  document,\n  \"mousemove\"\n);\n\nexport const globalMouseDown$ = fromEvent<React.MouseEvent>(\n  document,\n  \"mousedown\"\n);\n\nexport const globalMouseUp$ = fromEvent<React.MouseEvent>(\n  document,\n  \"mouseup\"\n);\n\nexport const mousePosRelative$ = <T extends Element>(ref: RefObject<T>) =>\n  globalMouseMove$.pipe(\n    map(globalMouseEventToXDistance(ref)),\n    filter((v) => v !== undefined) as OperatorFunction<\n      number | undefined,\n      number\n    >,\n    distinctUntilChanged()\n  );\n","import React, { RefObject } from \"react\";\nimport { Observable } from \"rxjs\";\nimport {\n  useObservable,\n  useObservableCallback,\n  useSubscription,\n} from \"observable-hooks\";\n\nimport * as mouse from \"../../../../shared/operators/mouse\";\nimport {\n  map,\n  switchMap,\n  take,\n  takeUntil,\n  withLatestFrom,\n} from \"rxjs/operators\";\n\nexport interface Region {\n  start: number;\n  end: number;\n}\nexport type TRegion = Region | undefined;\n\nexport interface UseRegionDragInput {\n  region$: Observable<TRegion>;\n  containerRef: RefObject<SVGSVGElement>;\n  onRegion: (r: TRegion) => void;\n}\n\nexport interface UseRegionDragOutput {\n  updatedRegion$: Observable<TRegion>;\n  onMouseDown: (e: React.MouseEvent<SVGRectElement, MouseEvent>) => void;\n}\n\nexport const useRegionDrag = ({\n  region$,\n  containerRef,\n  onRegion,\n}: UseRegionDragInput): UseRegionDragOutput => {\n  const [onMouseDown, mouseDown$] = useObservableCallback<\n    React.MouseEvent<SVGRectElement, MouseEvent>\n  >((e$) => e$.pipe(map(mouse.stopPropagation)));\n\n  const mouseDrag$ = useObservable(() =>\n    mouseDown$.pipe(\n      map(mouse.preventDefault),\n      switchMap((md) =>\n        mouse.globalMouseMove$.pipe(\n          map((mm) => {\n            mm.preventDefault();\n            if (!containerRef.current) return 0;\n            const dim = containerRef.current.getBoundingClientRect();\n            const deltaX = mm.clientX - md.clientX;\n            return deltaX / dim.width;\n          }),\n          takeUntil(mouse.globalMouseUp$)\n        )\n      )\n    )\n  );\n\n  const updatedRegion$ = useObservable<TRegion>(() =>\n    mouseDrag$.pipe(\n      withLatestFrom(region$),\n      map(([delta, r]) => {\n        if (!r) return r;\n        return { end: r.end + delta, start: r.start + delta };\n      })\n    )\n  );\n\n  const finishedUpdating$ = useObservable<TRegion>(() =>\n    updatedRegion$.pipe(\n      switchMap((r) =>\n        mouse.globalMouseUp$.pipe(\n          take(1),\n          map(() => r)\n        )\n      )\n    )\n  );\n\n  useSubscription(finishedUpdating$, onRegion);\n  return { updatedRegion$, onMouseDown };\n};\n\nexport interface UseRegionResize {\n  region$: Observable<TRegion>;\n  containerRef: RefObject<SVGSVGElement>;\n  onRegion: (r: TRegion) => void;\n  key: keyof Region;\n}\n\nexport interface UseRegionResizeOutput {\n  updatedRegion$: Observable<TRegion>;\n  onMouseDown: (e: React.MouseEvent<SVGRectElement, MouseEvent>) => void;\n}\n\nexport const useRegionResize = ({\n  region$,\n  containerRef,\n  onRegion,\n  key,\n}: UseRegionResize): UseRegionResizeOutput => {\n  const [onMouseDown, mouseDown$] = useObservableCallback<\n    React.MouseEvent<SVGRectElement, MouseEvent>\n  >((e$) => e$.pipe(map(mouse.stopPropagation)));\n\n  const mouseDrag$ = useObservable(() =>\n    mouseDown$.pipe(\n      map(mouse.preventDefault),\n      switchMap((md) =>\n        mouse.globalMouseMove$.pipe(\n          map((mm) => {\n            mm.preventDefault();\n            if (!containerRef.current) return 0;\n            const dim = containerRef.current.getBoundingClientRect();\n            const deltaX = mm.clientX - md.clientX;\n            return deltaX / dim.width;\n          }),\n          takeUntil(mouse.globalMouseUp$)\n        )\n      )\n    )\n  );\n\n  const updatedRegion$ = useObservable<TRegion>(() =>\n    mouseDrag$.pipe(\n      withLatestFrom(region$),\n      map(([delta, r]) => {\n        if (!r) return r;\n        return { ...r, [key]: r[key] + delta };\n      })\n    )\n  );\n\n  const finishedUpdating$ = useObservable<TRegion>(() =>\n    updatedRegion$.pipe(\n      switchMap((r) =>\n        mouse.globalMouseUp$.pipe(\n          take(1),\n          map(() => r)\n        )\n      )\n    )\n  );\n\n  useSubscription(finishedUpdating$, onRegion);\n  return { updatedRegion$, onMouseDown };\n};\n","import React, { RefObject } from \"react\";\nimport { merge, Observable } from \"rxjs\";\nimport { useObservableState } from \"observable-hooks\";\nimport styled from \"styled-components\";\n\nimport { useRegionDrag, useRegionResize } from \"./hooks\";\n\nconst Rect = styled.rect`\n  height: 100%;\n  fill: rgba(0, 0, 0, 0.25);\n  stroke: rgba(0, 0, 0, 0.25);\n  cursor: all-scroll;\n`;\n\nconst Border = styled.rect`\n  height: 100%;\n  width: 1px;\n  fill: rgba(0, 0, 0, 0.5);\n  cursor: col-resize;\n`;\n\nexport type TRegion = { start: number; end: number } | undefined;\n\nexport interface RegionProps {\n  region$: Observable<TRegion>;\n  containerRef: RefObject<SVGSVGElement>;\n  onRegion: (r: TRegion) => void;\n}\n\nconst Region: React.FC<RegionProps> = (props) => {\n  const { region$ } = props;\n  const drag = useRegionDrag(props);\n  const resizeStart = useRegionResize({ ...props, key: \"start\" });\n  const resizeEnd = useRegionResize({ ...props, key: \"end\" });\n\n  const [region] = useObservableState<TRegion>(\n    () =>\n      merge(\n        region$,\n        drag.updatedRegion$,\n        resizeStart.updatedRegion$,\n        resizeEnd.updatedRegion$\n      ),\n    undefined\n  );\n\n  if (region === undefined) return null;\n  return (\n    <>\n      <Rect\n        onClick={(e) => e.stopPropagation()}\n        onMouseDown={drag.onMouseDown}\n        x={`${region.start * 100}%`}\n        width={`${(region.end - region.start) * 100}%`}\n      />\n      <Border\n        x={`${region.start * 100}%`}\n        onClick={(e) => e.stopPropagation()}\n        onMouseDown={resizeStart.onMouseDown}\n      />\n      <Border\n        x={`${region.end * 100}%`}\n        onClick={(e) => e.stopPropagation()}\n        onMouseDown={resizeEnd.onMouseDown}\n      />\n    </>\n  );\n};\n\nexport default Region;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { scaleTime } from \"d3-scale\";\nimport format from \"date-fns/format\";\nimport { useWindowSize } from \"../../../../shared/hooks/browser\";\nimport {\n  useObservable,\n  useObservableState,\n} from \"observable-hooks\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\ninterface AxiosProps {\n  duration$: Observable<number>;\n}\n\nconst Group = styled.g`\n  transform: translateY(100%);\n`;\n\nconst Tick = styled.rect`\n  height: 100%;\n  width: 1px;\n  fill: rgba(0, 0, 0, 0.1);\n  transform: translateY(-100%);\n`;\n\nconst TickLabel = styled.text`\n  font-size: 0.33rem;\n  color: black;\n`;\n\nfunction toDateTime(secs: number | undefined) {\n  var t = new Date(1970, 0, 1);\n  if (secs) t.setSeconds(secs);\n  return t;\n}\n\nconst formatTick = (d: Date): string => {\n  if (d.getHours() > 0) return format(d, \"HH:mm:ss\");\n  return format(d, \"mm:ss\");\n};\n\nconst TICK_COUNT = 10;\n\nconst Axis: React.FC<AxiosProps> = ({ duration$ }) => {\n  const windowSize = useWindowSize();\n  const scale$ = useObservable(() =>\n    duration$.pipe(\n      map((d) => {\n        if (!d) return undefined;\n        return scaleTime()\n          .domain([toDateTime(0), toDateTime(d)])\n          .range([0, 100]);\n      })\n    )\n  );\n\n  const [Ticks] = useObservableState(() =>\n    scale$.pipe(\n      map((scale) => {\n        if (!scale) return null;\n        const ticks = scale.ticks(TICK_COUNT);\n        return ticks.map((tick, i) => {\n          const x = (100 * i) / TICK_COUNT;\n          const label = formatTick(tick);\n          return (\n            <g key={tick.valueOf()}>\n              <Tick x={`${x}%`} />\n              <TickLabel x={`${x}%`} y=\"-2px\" textAnchor=\"middle\">\n                {label}\n              </TickLabel>\n            </g>\n          );\n        });\n      })\n    )\n  );\n\n  return <Group key={String(windowSize)}>{Ticks}</Group>;\n};\n\nexport default Axis;\n","import { useLayoutEffect, useState } from \"react\";\n\ntype Size = [number, number];\n\nexport function useWindowSize(): Size {\n  const [size, setSize] = useState<Size>([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return size;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Observable } from \"rxjs\";\nimport { useObservableState } from \"observable-hooks\";\nimport { map } from \"rxjs/operators\";\n\ninterface MarkerProps {\n  progress$: Observable<number>;\n}\n\nconst StyledRect = styled.rect`\n  width: 1px;\n  height: 100%;\n  fill: rgb(10, 10, 10);\n`;\n\nconst Marker: React.FC<MarkerProps> = ({ progress$ }) => {\n  const [markerPosition] = useObservableState<string>(\n    () =>\n      progress$.pipe(\n        map((v) => {\n          if (!v) return \"0px\";\n          return `${v * 100}%`;\n        })\n      ),\n    \"0px\"\n  );\n\n  return <StyledRect x={markerPosition} />;\n};\n\nexport default Marker;\n","import React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { merge, Observable, OperatorFunction, timer } from \"rxjs\";\nimport {\n  useObservable,\n  useObservableCallback,\n  useObservableState,\n  useSubscription,\n} from \"observable-hooks\";\nimport {\n  filter,\n  map,\n  switchMap,\n  take,\n  takeUntil,\n  throttleTime,\n  withLatestFrom,\n} from \"rxjs/operators\";\nimport * as mouse from \"../../../shared/operators/mouse\";\n\nimport { Url } from \"../../state\";\n\nimport Region, { TRegion } from \"./region\";\nimport Axis from \"./axis\";\nimport Marker from \"./marker\";\n\ninterface TimebarProps {\n  url$: Observable<Url>;\n  region$: Observable<TRegion>;\n  progress$: Observable<number>;\n  duration$: Observable<number>;\n  setRegion: (r: TRegion) => void;\n  setProgress: (r: number) => void;\n}\n\nconst Svg = styled.svg<{ interactable: boolean }>`\n  width: 100%;\n  height: 2rem;\n  background-color: rgb(240, 240, 240);\n  cursor: ${({ interactable }) => (interactable ? \"pointer\" : \"auto\")};\n  pointer-events: ${({ interactable }) => (interactable ? \"all\" : \"none\")};\n`;\n\nconst Timebar: React.FC<TimebarProps> = ({\n  url$,\n  region$,\n  progress$,\n  duration$,\n  setRegion,\n  setProgress,\n}) => {\n  const svgRef = useRef<SVGSVGElement>(null);\n  useEffect(\n    () => svgRef.current?.addEventListener(\"wheel\", (e) => e.preventDefault()),\n    [svgRef]\n  );\n\n  const [videoLoaded] = useObservableState(() =>\n    url$.pipe(map((url) => url !== undefined))\n  );\n\n  const [onMouseDown, mouseDown$] = useObservableCallback<\n    React.MouseEvent<SVGSVGElement, MouseEvent>\n  >((e$) => e$.pipe(map(mouse.preventDefault)));\n\n  const [onMouseUp, mouseUp$] = useObservableCallback<\n    React.MouseEvent<SVGSVGElement, MouseEvent>\n  >((e$) => e$.pipe(map(mouse.preventDefault)));\n\n  const mousePosRelative$ = mouse.globalMouseMove$.pipe(\n    map(mouse.globalMouseEventToXDistance(svgRef)),\n    filter((v) => v !== undefined) as OperatorFunction<\n      number | undefined,\n      number\n    >\n  );\n\n  const [_onClick, click$] = useObservableCallback<\n    React.MouseEvent<SVGSVGElement, MouseEvent>\n  >((e$) => e$);\n\n  const leftClick$ = click$.pipe(\n    filter((e) => e.button === 0),\n    map(mouse.globalMouseEventToXDistance(svgRef))\n  );\n\n  const rightClick$ = mouseDown$.pipe(\n    filter((e) => e.button === 2),\n    throttleTime(500)\n  );\n\n  const holdClick$ = mouseDown$.pipe(\n    switchMap((e) =>\n      timer(100).pipe(\n        takeUntil(mouseUp$),\n        map(() => mouse.globalMouseEventToXDistance(svgRef)(e))\n      )\n    )\n  );\n\n  const regionClear$ = rightClick$.pipe(map(() => undefined));\n\n  const _region$: Observable<TRegion> = merge(\n    holdClick$.pipe(\n      switchMap((x1) =>\n        mousePosRelative$.pipe(\n          map((x2) => {\n            if (x1 > x2) return { start: x2, end: x1 };\n            else return { start: x1, end: x2 };\n          }),\n          takeUntil(mouseUp$)\n        )\n      )\n    ),\n    regionClear$\n  );\n\n  const regionEnd$ = holdClick$.pipe(\n    switchMap(() => mouseUp$.pipe(take(1))),\n    withLatestFrom(_region$),\n    map(([_, r]) => r)\n  );\n\n  useSubscription(leftClick$, setProgress);\n  useSubscription(regionEnd$, setRegion);\n  useSubscription(regionClear$, setRegion);\n\n  const mergedRegion$ = useObservable(() => merge(region$, _region$));\n\n  return (\n    <>\n      <Svg\n        ref={svgRef}\n        onContextMenu={(e) => e.preventDefault()}\n        onClick={_onClick}\n        onMouseUp={onMouseUp}\n        onMouseDown={onMouseDown}\n        interactable={!!videoLoaded}\n      >\n        <Marker progress$={progress$} />\n        <Region\n          region$={mergedRegion$}\n          containerRef={svgRef}\n          onRegion={setRegion}\n        />\n        <Axis duration$={duration$} />\n      </Svg>\n    </>\n  );\n};\n\nexport default Timebar;\n","import { AppStatus } from \"../../state\";\n\nexport const getLabels = (status: AppStatus) => {\n  const video = status === \"playingVideo\" ? \"Stop\" : \"Play\";\n  const recording =\n    status === \"recordingVoice\" ? \"Stop recording\" : \"Start recording\";\n  const playback = status === \"playingVoice\" ? \"Stop voice\" : \"Play Voice\";\n\n  return { video, recording, playback };\n};\n","import React from \"react\";\nimport {\n  useObservableCallback,\n  useObservableState,\n  useSubscription,\n} from \"observable-hooks\";\nimport { Observable } from \"rxjs\";\nimport { map, withLatestFrom } from \"rxjs/operators\";\nimport styled from \"styled-components\";\nimport { AppStatus } from \"../../state\";\nimport { getLabels } from \"./utils\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin: 1rem 0;\n  & > * {\n    margin: 0 0.5rem;\n  }\n`;\n\ninterface ControlProps {\n  status$: Observable<AppStatus>;\n  setStatus: (status: AppStatus) => void;\n}\n\nconst noop = (...args: any[]): void => {};\n\nconst Controls: React.FC<ControlProps> = ({ status$, setStatus }) => {\n  const [labels] = useObservableState(() => status$.pipe(map(getLabels)));\n\n  const [videoEnabled] = useObservableState<boolean>(() =>\n    status$.pipe(\n      map((status) => status === \"playingVideo\" || status === \"idle\")\n    )\n  );\n\n  const [recordingEnabled] = useObservableState<boolean>(() =>\n    status$.pipe(\n      map((status) => status === \"recordingVoice\" || status === \"idle\")\n    )\n  );\n\n  const [playbackEnabled] = useObservableState<boolean>(() =>\n    status$.pipe(\n      map((status) => status === \"playingVoice\" || status === \"idle\")\n    )\n  );\n\n  const [onVideoClick, videoClick$] = useObservableCallback(($e) =>\n    $e.pipe(withLatestFrom(status$))\n  );\n  useSubscription(videoClick$, ([_, status]) => {\n    switch (status) {\n      case \"playingVideo\":\n        setStatus(\"idle\");\n        break;\n      case \"idle\":\n        setStatus(\"playingVideo\");\n        break;\n      default:\n        break;\n    }\n  });\n\n  const [onRecordingClick, recordingClick$] = useObservableCallback(($e) =>\n    $e.pipe(withLatestFrom(status$))\n  );\n  useSubscription(recordingClick$, ([_, status]) => {\n    switch (status) {\n      case \"recordingVoice\":\n        setStatus(\"idle\");\n        break;\n      case \"idle\":\n        setStatus(\"attemptingRecord\");\n        break;\n      default:\n        break;\n    }\n  });\n\n  const [onPlaybackClick, playbackClick$] = useObservableCallback(($e) =>\n    $e.pipe(withLatestFrom(status$))\n  );\n  useSubscription(playbackClick$, ([_, status]) => {\n    switch (status) {\n      case \"playingVoice\":\n        setStatus(\"idle\");\n        break;\n      case \"idle\":\n        setStatus(\"playingVoice\");\n        break;\n      default:\n        break;\n    }\n  });\n\n  return (\n    <Container>\n      <button\n        disabled={!videoEnabled}\n        onClick={videoEnabled ? onVideoClick : noop}\n      >\n        {labels?.video}\n      </button>\n      <button\n        disabled={!recordingEnabled}\n        onClick={recordingEnabled ? onRecordingClick : noop}\n      >\n        {labels?.recording}\n      </button>\n      <button\n        disabled={!playbackEnabled}\n        onClick={playbackEnabled ? onPlaybackClick : noop}\n      >\n        {labels?.playback}\n      </button>\n    </Container>\n  );\n};\n\nexport default Controls;\n","import React, { useCallback } from \"react\";\n\nconst noop = () => {};\n\nexport type MediaRecorderStatus =\n  | \"acquiring_media\"\n  | \"ready\"\n  | \"failed\"\n  | \"idle\"\n  | \"stopping\"\n  | \"stopped\"\n  | \"recording\";\n\nexport interface UseMediaRecorder {\n  blobOptions?: Partial<BlobPropertyBag>;\n  onStop?: (b: Blob) => void;\n  onStart?: VoidFunction;\n  onError?: (e: DOMException) => void;\n  onDataAvailable?: (b: Blob) => void;\n}\n\nexport function useMediaRecorder({\n  blobOptions = {},\n  onStop = noop,\n  onStart = noop,\n  onError = noop,\n  onDataAvailable = noop,\n}: UseMediaRecorder) {\n  let mediaChunks = React.useRef<Blob[]>([]);\n  let mediaStream = React.useRef<MediaStream | null>(null);\n  let mediaRecorder = React.useRef<MediaRecorder | null>(null);\n  let [error, setError] = React.useState<Error | null>(null);\n  let [status, setStatus] = React.useState<MediaRecorderStatus>(\"idle\");\n  let [mediaBlob, setMediaBlob] = React.useState<Blob | null>(null);\n  let [isAudioMuted, setIsAudioMuted] = React.useState(false);\n\n  const getMediaStream = useCallback(async () => {\n    if (error) {\n      setError(null);\n    }\n\n    setStatus(\"acquiring_media\");\n\n    try {\n      const stream = await window.navigator.mediaDevices.getUserMedia({\n        audio: true,\n      });\n\n      stream\n        .getAudioTracks()\n        .forEach((audioTrack) => stream.addTrack(audioTrack));\n\n      mediaStream.current = stream;\n      setStatus(\"ready\");\n    } catch (err) {\n      setError(err);\n      setStatus(\"failed\");\n    }\n  }, [mediaStream, setStatus, setError, error]);\n\n  const clearMediaStream = useCallback(() => {\n    if (mediaStream.current) {\n      mediaStream.current.getTracks().forEach((track) => track.stop());\n      mediaStream.current = null;\n    }\n  }, [mediaStream]);\n\n  const handleDataAvailable = useCallback(\n    (e: BlobEvent) => {\n      if (e.data.size) {\n        mediaChunks.current.push(e.data);\n      }\n      onDataAvailable(e.data);\n    },\n    [onDataAvailable, mediaChunks]\n  );\n\n  const handleStop = useCallback(() => {\n    let [sampleChunk] = mediaChunks.current;\n    const type = sampleChunk ? sampleChunk.type : \"audio/webm\";\n    let blobPropertyBag = Object.assign({ type }, blobOptions);\n    let blob = new Blob(mediaChunks.current, blobPropertyBag);\n\n    setMediaBlob(blob);\n    setStatus(\"stopped\");\n    onStop(blob);\n  }, [mediaChunks, blobOptions, setMediaBlob, setStatus, onStop]);\n\n  const handleError = useCallback(\n    (e: MediaRecorderErrorEvent) => {\n      setError(e.error);\n      setStatus(\"idle\");\n      onError(e.error);\n    },\n    [setError, setStatus, onError]\n  );\n\n  const startRecording = useCallback(async () => {\n    if (error) {\n      setError(null);\n    }\n\n    if (!mediaStream.current && status !== \"acquiring_media\") {\n      await getMediaStream();\n    }\n\n    mediaChunks.current = [];\n\n    if (mediaStream.current) {\n      mediaRecorder.current = new MediaRecorder(mediaStream.current, {\n        mimeType: \"audio/webm\",\n      });\n      mediaRecorder.current.addEventListener(\n        \"dataavailable\",\n        handleDataAvailable\n      );\n      mediaRecorder.current.addEventListener(\"stop\", handleStop);\n      mediaRecorder.current.addEventListener(\"error\", handleError);\n      mediaRecorder.current.start(50);\n      setStatus(\"recording\");\n      onStart();\n    }\n  }, [\n    mediaRecorder,\n    mediaStream,\n    mediaChunks,\n    error,\n    status,\n    onStart,\n    setError,\n    setStatus,\n    getMediaStream,\n    handleDataAvailable,\n    handleError,\n    handleStop,\n  ]);\n\n  const muteAudio = useCallback(\n    (mute: boolean) => {\n      setIsAudioMuted(mute);\n\n      if (mediaStream.current) {\n        mediaStream.current.getAudioTracks().forEach((audioTrack) => {\n          audioTrack.enabled = !mute;\n        });\n      }\n    },\n    [setIsAudioMuted, mediaStream]\n  );\n\n  const pauseRecording = useCallback(() => {\n    if (mediaRecorder.current && mediaRecorder.current.state === \"recording\") {\n      mediaRecorder.current.pause();\n    }\n  }, [mediaRecorder]);\n\n  const resumeRecording = useCallback(() => {\n    if (mediaRecorder.current && mediaRecorder.current.state === \"paused\") {\n      mediaRecorder.current.resume();\n    }\n  }, [mediaRecorder]);\n\n  const stopRecording = useCallback(() => {\n    if (mediaRecorder.current) {\n      setStatus(\"stopping\");\n      try {\n        mediaRecorder.current.stop();\n      } catch {\n        console.warn(\"Stoping idle media recorder!\");\n      }\n      mediaRecorder.current.removeEventListener(\n        \"dataavailable\",\n        handleDataAvailable\n      );\n      mediaRecorder.current.removeEventListener(\"stop\", handleStop);\n      mediaRecorder.current.removeEventListener(\"error\", handleError);\n      clearMediaStream();\n    }\n  }, [\n    mediaRecorder,\n    clearMediaStream,\n    handleDataAvailable,\n    handleError,\n    handleStop,\n    setStatus,\n  ]);\n\n  React.useEffect(() => {\n    if (!window.MediaRecorder) {\n      throw new ReferenceError(\n        \"MediaRecorder is not supported in this browser. Please ensure that you are running the latest version of chrome/firefox/edge.\"\n      );\n    }\n  }, []);\n\n  return {\n    error,\n    status,\n    mediaBlob,\n    isAudioMuted,\n    stopRecording,\n    getMediaStream,\n    startRecording,\n    pauseRecording,\n    resumeRecording,\n    clearMediaStream,\n    muteAudio: () => muteAudio(true),\n    unMuteAudio: () => muteAudio(false),\n    get liveStream() {\n      if (mediaStream.current) {\n        return new MediaStream(mediaStream.current.getVideoTracks());\n      }\n      return null;\n    },\n  };\n}\n","import { useObservable, useSubscription } from \"observable-hooks\";\nimport React, { useCallback, useRef, useState } from \"react\";\nimport { Observable } from \"rxjs\";\nimport { pairwise } from \"rxjs/operators\";\nimport { useMediaRecorder } from \"../../../shared/hooks/media\";\nimport { AppStatus } from \"../../state\";\n\ninterface RecorderProps {\n  status$: Observable<AppStatus>;\n  setStatus: (status: AppStatus) => void;\n}\n\nconst Recorder: React.FC<RecorderProps> = ({ status$, setStatus }) => {\n  const refAudio = useRef<HTMLAudioElement>(null);\n  const statusPair$ = useObservable(() => status$.pipe(pairwise()));\n  const [blobUrl, setBlobUrl] = useState<string | undefined>(undefined);\n\n  const onStop = useCallback(\n    (blob: Blob) => {\n      if (refAudio.current) {\n        const _blobUrl = URL.createObjectURL(blob);\n        refAudio.current.src = _blobUrl;\n        setBlobUrl(_blobUrl);\n        setStatus(\"idle\");\n      }\n    },\n    [setStatus, setBlobUrl, refAudio]\n  );\n\n  const onStart = useCallback(() => setStatus(\"recordingVoice\"), [setStatus]);\n  const onError = useCallback(() => setStatus(\"idle\"), [setStatus]);\n\n  const { startRecording, stopRecording } = useMediaRecorder({\n    onStop,\n    onStart,\n    onError,\n  });\n\n  useSubscription(statusPair$, ([statusPrev, status]) => {\n    switch (status) {\n      case \"attemptingRecord\":\n        startRecording();\n        URL.revokeObjectURL(blobUrl || \"\");\n        setBlobUrl(undefined);\n        break;\n      case \"playingVoice\":\n        if (refAudio.current && refAudio.current.src) {\n          refAudio.current.play();\n        }\n        break;\n      case \"idle\":\n        if (statusPrev === \"playingVoice\") {\n          if (refAudio.current) {\n            refAudio.current.pause();\n            refAudio.current.currentTime = 0;\n          }\n        } else if (statusPrev === \"recordingVoice\") {\n          stopRecording();\n        }\n        break;\n      default:\n        break;\n    }\n  });\n\n  const onEnded = useCallback(() => {\n    if (refAudio.current) {\n      refAudio.current.pause();\n      refAudio.current.currentTime = 0;\n      setStatus(\"idle\");\n    }\n  }, [refAudio, setStatus]);\n\n  return <audio ref={refAudio} onEnded={onEnded} />;\n};\n\nexport default Recorder;\n","import { useCallback, useMemo, RefObject, createRef } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { BehaviorSubject } from \"rxjs\";\n\nexport type Url = string | undefined;\nexport type DefinedRegion = { start: number; end: number };\nexport type TRegion = DefinedRegion | undefined;\n\nexport type AppStatus =\n  | \"idle\"\n  | \"loading\"\n  | \"playingVoice\"\n  | \"attemptingRecord\"\n  | \"recordingVoice\"\n  | \"playingVideo\";\n\nexport type AppState = {\n  status: AppStatus;\n  url: Url;\n  duration: number;\n  progress: number;\n  region: TRegion;\n  playerRef: RefObject<ReactPlayer>;\n};\n\nconst initialState: AppState = {\n  status: \"idle\",\n  url: undefined,\n  duration: 0,\n  progress: 0,\n  region: undefined,\n  playerRef: createRef(),\n};\n\nexport const useAppState = () => {\n  const state$ = useMemo(() => new BehaviorSubject<AppState>(initialState), []);\n\n  const setStatus = useCallback(\n    (status: AppStatus) => {\n      const value = state$.getValue();\n      if (value.region) value.playerRef.current?.seekTo(value.region.start);\n      state$.next({ ...value, status });\n    },\n    [state$]\n  );\n\n  const setUrl = useCallback(\n    (url: Url) => state$.next({ ...state$.getValue(), url }),\n    [state$]\n  );\n\n  const setProgress = useCallback(\n    (progress: number) => {\n      const value = state$.getValue();\n      if (value.region) {\n        if (progress >= value.region.end) {\n          value.playerRef.current?.seekTo(value.region.start);\n          state$.next({\n            ...value,\n            progress: value.region.start,\n            status: \"idle\",\n          });\n          return;\n        }\n      }\n      state$.next({ ...value, progress });\n    },\n    [state$]\n  );\n\n  const setManualProgress = useCallback(\n    (progress: number) => {\n      const value = state$.getValue();\n      value.playerRef.current?.seekTo(progress);\n      state$.next({ ...value, status: \"idle\", progress });\n    },\n    [state$]\n  );\n\n  const setDuration = useCallback(\n    (duration: number) => state$.next({ ...state$.getValue(), duration }),\n    [state$]\n  );\n\n  const setRegion = useCallback(\n    (region: TRegion) => state$.next({ ...state$.getValue(), region }),\n    [state$]\n  );\n\n  return {\n    state$,\n    setStatus,\n    setUrl,\n    setProgress,\n    setManualProgress,\n    setDuration,\n    setRegion,\n  };\n};\n","import React from \"react\";\n\nimport Player from \"./components/player\";\nimport Input from \"./components/input\";\nimport Timebar from \"./components/timebar\";\nimport Controls from \"./components/controls\";\nimport Recorder from \"./components/recorder\";\n\nimport { useAppState } from \"./state\";\nimport { usePartitionedState } from \"./hooks\";\n\nfunction App() {\n  const { state$, ...setters } = useAppState();\n\n  const {\n    url$,\n    status$,\n    region$,\n    duration$,\n    progress$,\n    playerRef$,\n  } = usePartitionedState(state$);\n\n  return (\n    <div>\n      <p>https://www.youtube.com/watch?v=EqE_AH39144</p>\n      <p>https://www.youtube.com/watch?v=sS55zq6Hz8A</p>\n      <Input onChange={setters.setUrl} />\n      <Timebar\n        url$={url$}\n        region$={region$}\n        duration$={duration$}\n        progress$={progress$}\n        setRegion={setters.setRegion}\n        setProgress={setters.setManualProgress}\n      />\n      <Controls status$={status$} setStatus={setters.setStatus} />\n      <Player\n        url$={url$}\n        playerRef$={playerRef$}\n        status$={status$}\n        setDuration={setters.setDuration}\n        setProgress={setters.setProgress}\n      />\n      <Recorder status$={status$} setStatus={setters.setStatus} />\n    </div>\n  );\n}\n\nexport default App;\n","import { useObservable } from \"observable-hooks\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { distinctUntilChanged, map } from \"rxjs/operators\";\nimport { AppState } from \"./state\";\n\nexport const usePartitionedState = (state$: BehaviorSubject<AppState>) => {\n  const status$ = useObservable(() =>\n    state$.pipe(\n      map((s) => s.status),\n      distinctUntilChanged()\n    )\n  );\n\n  const url$ = useObservable(() =>\n    state$.pipe(\n      map((s) => s.url),\n      distinctUntilChanged()\n    )\n  );\n\n  const duration$ = useObservable(() =>\n    state$.pipe(\n      map((s) => s.duration),\n      distinctUntilChanged()\n    )\n  );\n\n  const progress$ = useObservable(() =>\n    state$.pipe(\n      map((s) => s.progress),\n      distinctUntilChanged()\n    )\n  );\n\n  const region$ = useObservable(() =>\n    state$.pipe(\n      map((s) => s.region),\n      distinctUntilChanged()\n    )\n  );\n\n  const playerRef$ = useObservable(() =>\n    state$.pipe(\n      map((s) => s.playerRef),\n      distinctUntilChanged()\n    )\n  );\n\n  return { status$, url$, duration$, progress$, region$, playerRef$ };\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./app\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}