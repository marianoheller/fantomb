{"version":3,"sources":["app/components/player/index.tsx","app/components/input/index.tsx","shared/operators/mouse.ts","shared/hooks/zoom.ts","app/components/timebar/region/hooks.ts","app/components/timebar/region/index.tsx","app/components/timebar/axis/index.tsx","app/components/timebar/marker/index.tsx","app/components/timebar/index.tsx","app/components/controls/utils.ts","app/components/controls/index.tsx","shared/hooks/media.ts","app/components/recorder/index.tsx","app/state.ts","app/index.tsx","app/hooks.ts","reportWebVitals.ts","index.tsx"],"names":["PlayerWrapper","styled","div","StyledReactPlayer","ReactPlayer","Player","url$","status$","playerRef$","setProgress","setDuration","useObservableState","ref","url","pipe","map","status","playing","_setProgress","useCallback","played","controls","onProgress","onDuration","volume","progressInterval","InputWrapper","StyledInput","input","Input","onChange","useObservableCallback","event$","e","currentTarget","value","_onChange","onChange$","filter","key","_onEnter","onEnter$","onActualChange$","useObservable","debounce","race","timer","useSubscription","name","type","autoComplete","onKeyPress","preventDefault","stopPropagation","globalMouseEventToXDistance","current","clientX","dim","getBoundingClientRect","left","width","globalMouseMove$","fromEvent","document","globalMouseUp$","parseZoomValue","deltaX","deltaY","sign","Math","abs","reduce","acc","v","sqrt","pow","useRegionResize","region$","containerRef","onRegion","e$","mouse","onMouseDown","mouseDown$","mouseDrag$","switchMap","md","mm","takeUntil","updatedRegion$","withLatestFrom","delta","r","finishedUpdating$","take","Rect","rect","Border","Region","props","drag","end","start","useRegionDrag","resizeStart","resizeEnd","merge","undefined","region","onClick","x","Group","g","Tick","TickLabel","text","scales","Array","keys","i","Axis","duration$","zoom$","idealTickCount$","startWith","z","round","distinctUntilChanged","tickCount$","combineLatest","duration","fraction","segment","find","s","floor","tickCount","d","tick","secs","t","Date","setSeconds","toDateTime","label","getHours","format","y","textAnchor","valueOf","Ticks","StyledRect","Marker","progress$","markerPosition","TimebarWrapper","svg","Svg","attrs","style","zoom","interactable","Timebar","setRegion","svgRef","useRef","useEffect","addEventListener","onWheel","wheel$","resetZoom","resetZoom$","throttleTime","scan","exp","max","useZoom","tap","videoLoaded","onMouseUp","mouseUp$","mousePosRelative$","_onClick","leftClick$","button","rightClick$","holdClick$","regionClear$","_region$","x1","x2","regionEnd$","mergedRegion$","onContextMenu","getLabels","video","recording","playback","Container","noop","Controls","setStatus","labels","videoEnabled","recordingEnabled","playbackEnabled","$e","onVideoClick","videoClick$","onRecordingClick","recordingClick$","onPlaybackClick","playbackClick$","disabled","Recorder","refAudio","statusPair$","pairwise","useState","blobUrl","setBlobUrl","blobOptions","onStop","onStart","onError","onDataAvailable","mediaChunks","React","mediaStream","mediaRecorder","error","setError","mediaBlob","setMediaBlob","isAudioMuted","setIsAudioMuted","getMediaStream","a","window","navigator","mediaDevices","getUserMedia","audio","stream","getAudioTracks","forEach","audioTrack","addTrack","clearMediaStream","getTracks","track","stop","handleDataAvailable","data","size","push","handleStop","sampleChunk","blobPropertyBag","Object","assign","blob","Blob","handleError","startRecording","MediaRecorder","mimeType","muteAudio","mute","enabled","pauseRecording","state","pause","resumeRecording","resume","stopRecording","console","warn","removeEventListener","ReferenceError","unMuteAudio","MediaStream","getVideoTracks","useMediaRecorder","_blobUrl","URL","createObjectURL","src","statusPrev","revokeObjectURL","play","currentTime","onEnded","initialState","progress","playerRef","createRef","App","state$","useMemo","BehaviorSubject","getValue","seekTo","next","setUrl","setManualProgress","useAppState","setters","usePartitionedState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dab44a1c.chunk.js","sourcesContent":["import React, { RefObject, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useObservableState } from \"observable-hooks\";\nimport ReactPlayer from \"react-player\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { AppStatus, Url } from \"../../state\";\n\ninterface PlayerProps {\n  url$: Observable<Url>;\n  status$: Observable<AppStatus>;\n  playerRef$: Observable<RefObject<ReactPlayer>>;\n  setProgress: (progress: number) => void;\n  setDuration: (progress: number) => void;\n}\n\nconst PlayerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledReactPlayer = styled(ReactPlayer)`\n  pointer-events: none;\n`;\n\nconst Player: React.FC<PlayerProps> = ({\n  url$,\n  status$,\n  playerRef$,\n  setProgress,\n  setDuration,\n}) => {\n  const [ref] = useObservableState(() => playerRef$);\n  const [url] = useObservableState(() => url$);\n  const [playing] = useObservableState(() =>\n    status$.pipe(map((status) => status === \"playingVideo\"))\n  );\n  const _setProgress = useCallback(({ played }) => setProgress(played), [\n    setProgress,\n  ]);\n\n  return (\n    <PlayerWrapper>\n      <StyledReactPlayer\n        key={url} /* https://github.com/CookPete/react-player/issues/880 */\n        ref={ref}\n        url={url}\n        playing={playing}\n        controls={false}\n        onProgress={_setProgress}\n        onDuration={setDuration}\n        volume={1}\n        progressInterval={100}\n      />\n    </PlayerWrapper>\n  );\n};\n\nexport default Player;\n","import React, { KeyboardEvent } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  useObservable,\n  useObservableCallback,\n  useSubscription,\n} from \"observable-hooks\";\nimport { race, timer } from \"rxjs\";\nimport { debounce, filter, map } from \"rxjs/operators\";\n\ninterface InputProps {\n  onChange: (s: string) => void;\n}\n\nconst InputWrapper = styled.div`\n  margin: 1rem 0;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledInput = styled.input`\n  width: 20rem;\n  text-align: center;\n`;\n\nconst Input: React.FC<InputProps> = ({ onChange }) => {\n  const [_onChange, onChange$] = useObservableCallback<\n    string,\n    React.ChangeEvent<HTMLInputElement>\n  >((event$) => event$.pipe(map((e) => e.currentTarget.value)));\n\n  const [_onEnter, onEnter$] = useObservableCallback<\n    string,\n    KeyboardEvent<HTMLInputElement>\n  >((event$) =>\n    event$.pipe(\n      filter((e) => e.key === \"Enter\"),\n      map((e) => e.currentTarget.value)\n    )\n  );\n\n  const onActualChange$ = useObservable(() =>\n    onChange$.pipe(debounce(() => race(timer(1000), onEnter$)))\n  );\n\n  useSubscription(onActualChange$, onChange);\n\n  return (\n    <InputWrapper>\n      <StyledInput\n        name=\"youtube\"\n        type=\"text\"\n        autoComplete=\"on\"\n        onChange={_onChange}\n        onKeyPress={_onEnter}\n      />\n    </InputWrapper>\n  );\n};\n\nexport default Input;\n","import { RefObject, SyntheticEvent } from \"react\";\nimport { fromEvent, OperatorFunction } from \"rxjs\";\nimport { distinctUntilChanged, filter, map } from \"rxjs/operators\";\n\nexport const preventDefault = <T extends SyntheticEvent>(e: T): T => {\n  e.preventDefault();\n  return e;\n};\n\nexport const stopPropagation = <T extends SyntheticEvent>(e: T): T => {\n  e.stopPropagation();\n  return e;\n};\n\nexport const globalMouseEventToXDistance = <T extends Element>(\n  ref: RefObject<T>\n) => (e: React.MouseEvent): number => {\n  if (!ref.current) return 0;\n  const { clientX } = e;\n  const dim = ref.current.getBoundingClientRect();\n  const x = clientX - dim.left;\n  return x / dim.width;\n};\n\nexport const localMouseEventToXDistance = <T extends Element>(\n  e: React.MouseEvent<T, MouseEvent>\n): number => {\n  const { target, clientX } = e;\n  const dim = (target as Element).getBoundingClientRect();\n  const x = clientX - dim.left;\n  return x / dim.width;\n};\n\nexport const globalMouseMove$ = fromEvent<React.MouseEvent>(\n  document,\n  \"mousemove\"\n);\n\nexport const globalMouseDown$ = fromEvent<React.MouseEvent>(\n  document,\n  \"mousedown\"\n);\n\nexport const globalMouseUp$ = fromEvent<React.MouseEvent>(\n  document,\n  \"mouseup\"\n);\n\nexport const mousePosRelative$ = <T extends Element>(ref: RefObject<T>) =>\n  globalMouseMove$.pipe(\n    map(globalMouseEventToXDistance(ref)),\n    filter((v) => v !== undefined) as OperatorFunction<\n      number | undefined,\n      number\n    >,\n    distinctUntilChanged()\n  );\n","import { useObservable, useObservableCallback } from \"observable-hooks\";\nimport { RefObject, useEffect } from \"react\";\nimport { merge } from \"rxjs\";\nimport { distinctUntilChanged, map, scan, throttleTime } from \"rxjs/operators\";\nimport * as mouse from \"../operators/mouse\";\n\nconst parseZoomValue = ({\n  deltaX,\n  deltaY,\n}: React.WheelEvent<Element>): number => {\n  const sign = [Math.sign(deltaX), Math.sign(deltaY)]\n    .filter(Math.abs)\n    .reduce((acc, v) => acc * v, 1);\n  const d = Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  return d * sign;\n};\n\nexport const INITIAL_ZOOM = 1;\nexport const SENSITIVITY = 0.01;\n\nexport const useZoom = (ref: RefObject<Element>) => {\n  useEffect(\n    () => ref.current?.addEventListener(\"wheel\", (e) => e.preventDefault()),\n    [ref]\n  );\n\n  const [onWheel, wheel$] = useObservableCallback<React.WheelEvent<Element>>(\n    (e$) => e$.pipe(map(mouse.preventDefault))\n  );\n\n  const [resetZoom, resetZoom$] = useObservableCallback<number, void>((e$) =>\n    e$.pipe(map(() => INITIAL_ZOOM))\n  );\n\n  const zoom$ = useObservable(() =>\n    merge(\n      resetZoom$,\n      wheel$.pipe(\n        throttleTime(20),\n        map(parseZoomValue),\n        scan(\n          (acc, v) => {\n            const exp = acc.exp + v * SENSITIVITY;\n            const zoom = Math.max(INITIAL_ZOOM, Math.pow(2, exp));\n            return { zoom, exp };\n          },\n          { zoom: INITIAL_ZOOM, exp: 1 }\n        ),\n        map(({ zoom }) => zoom),\n        distinctUntilChanged()\n      )\n    )\n  );\n\n  return { zoom$, onWheel, resetZoom };\n};\n","import React, { RefObject } from \"react\";\nimport { Observable } from \"rxjs\";\nimport {\n  useObservable,\n  useObservableCallback,\n  useSubscription,\n} from \"observable-hooks\";\n\nimport * as mouse from \"../../../../shared/operators/mouse\";\nimport {\n  map,\n  switchMap,\n  take,\n  takeUntil,\n  withLatestFrom,\n} from \"rxjs/operators\";\n\nexport interface Region {\n  start: number;\n  end: number;\n}\nexport type TRegion = Region | undefined;\n\nexport interface UseRegionDragInput {\n  region$: Observable<TRegion>;\n  containerRef: RefObject<SVGSVGElement>;\n  onRegion: (r: TRegion) => void;\n}\n\nexport interface UseRegionDragOutput {\n  updatedRegion$: Observable<TRegion>;\n  onMouseDown: (e: React.MouseEvent<SVGRectElement, MouseEvent>) => void;\n}\n\nexport const useRegionDrag = ({\n  region$,\n  containerRef,\n  onRegion,\n}: UseRegionDragInput): UseRegionDragOutput => {\n  const [onMouseDown, mouseDown$] = useObservableCallback<\n    React.MouseEvent<SVGRectElement, MouseEvent>\n  >((e$) => e$.pipe(map(mouse.stopPropagation)));\n\n  const mouseDrag$ = useObservable(() =>\n    mouseDown$.pipe(\n      map(mouse.preventDefault),\n      switchMap((md) =>\n        mouse.globalMouseMove$.pipe(\n          map((mm) => {\n            mm.preventDefault();\n            if (!containerRef.current) return 0;\n            const dim = containerRef.current.getBoundingClientRect();\n            const deltaX = mm.clientX - md.clientX;\n            return deltaX / dim.width;\n          }),\n          takeUntil(mouse.globalMouseUp$)\n        )\n      )\n    )\n  );\n\n  const updatedRegion$ = useObservable<TRegion>(() =>\n    mouseDrag$.pipe(\n      withLatestFrom(region$),\n      map(([delta, r]) => {\n        if (!r) return r;\n        return { end: r.end + delta, start: r.start + delta };\n      })\n    )\n  );\n\n  const finishedUpdating$ = useObservable<TRegion>(() =>\n    updatedRegion$.pipe(\n      switchMap((r) =>\n        mouse.globalMouseUp$.pipe(\n          take(1),\n          map(() => r)\n        )\n      )\n    )\n  );\n\n  useSubscription(finishedUpdating$, onRegion);\n  return { updatedRegion$, onMouseDown };\n};\n\nexport interface UseRegionResize {\n  region$: Observable<TRegion>;\n  containerRef: RefObject<SVGSVGElement>;\n  onRegion: (r: TRegion) => void;\n  key: keyof Region;\n}\n\nexport interface UseRegionResizeOutput {\n  updatedRegion$: Observable<TRegion>;\n  onMouseDown: (e: React.MouseEvent<SVGRectElement, MouseEvent>) => void;\n}\n\nexport const useRegionResize = ({\n  region$,\n  containerRef,\n  onRegion,\n  key,\n}: UseRegionResize): UseRegionResizeOutput => {\n  const [onMouseDown, mouseDown$] = useObservableCallback<\n    React.MouseEvent<SVGRectElement, MouseEvent>\n  >((e$) => e$.pipe(map(mouse.stopPropagation)));\n\n  const mouseDrag$ = useObservable(() =>\n    mouseDown$.pipe(\n      map(mouse.preventDefault),\n      switchMap((md) =>\n        mouse.globalMouseMove$.pipe(\n          map((mm) => {\n            mm.preventDefault();\n            if (!containerRef.current) return 0;\n            const dim = containerRef.current.getBoundingClientRect();\n            const deltaX = mm.clientX - md.clientX;\n            return deltaX / dim.width;\n          }),\n          takeUntil(mouse.globalMouseUp$)\n        )\n      )\n    )\n  );\n\n  const updatedRegion$ = useObservable<TRegion>(() =>\n    mouseDrag$.pipe(\n      withLatestFrom(region$),\n      map(([delta, r]) => {\n        if (!r) return r;\n        return { ...r, [key]: r[key] + delta };\n      })\n    )\n  );\n\n  const finishedUpdating$ = useObservable<TRegion>(() =>\n    updatedRegion$.pipe(\n      switchMap((r) =>\n        mouse.globalMouseUp$.pipe(\n          take(1),\n          map(() => r)\n        )\n      )\n    )\n  );\n\n  useSubscription(finishedUpdating$, onRegion);\n  return { updatedRegion$, onMouseDown };\n};\n","import React, { RefObject } from \"react\";\nimport { merge, Observable } from \"rxjs\";\nimport { useObservableState } from \"observable-hooks\";\nimport styled from \"styled-components\";\n\nimport { useRegionDrag, useRegionResize } from \"./hooks\";\n\nconst Rect = styled.rect`\n  height: 100%;\n  fill: rgba(0, 0, 0, 0.25);\n  stroke: rgba(0, 0, 0, 0.25);\n  cursor: all-scroll;\n`;\n\nconst Border = styled.rect`\n  height: 100%;\n  width: 2px;\n  fill: rgb(220, 10, 10);\n  cursor: col-resize;\n`;\n\nexport type TRegion = { start: number; end: number } | undefined;\n\nexport interface RegionProps {\n  region$: Observable<TRegion>;\n  containerRef: RefObject<SVGSVGElement>;\n  onRegion: (r: TRegion) => void;\n}\n\nconst Region: React.FC<RegionProps> = (props) => {\n  const { region$ } = props;\n  const drag = useRegionDrag(props);\n  const resizeStart = useRegionResize({ ...props, key: \"start\" });\n  const resizeEnd = useRegionResize({ ...props, key: \"end\" });\n\n  const [region] = useObservableState<TRegion>(\n    () =>\n      merge(\n        region$,\n        drag.updatedRegion$,\n        resizeStart.updatedRegion$,\n        resizeEnd.updatedRegion$\n      ),\n    undefined\n  );\n\n  if (region === undefined) return null;\n  return (\n    <>\n      <Rect\n        onClick={(e) => e.stopPropagation()}\n        onMouseDown={drag.onMouseDown}\n        x={`${region.start * 100}%`}\n        width={`${(region.end - region.start) * 100}%`}\n      />\n      <Border\n        x={`${region.start * 100}%`}\n        onClick={(e) => e.stopPropagation()}\n        onMouseDown={resizeStart.onMouseDown}\n      />\n      <Border\n        x={`${region.end * 100}%`}\n        onClick={(e) => e.stopPropagation()}\n        onMouseDown={resizeEnd.onMouseDown}\n      />\n    </>\n  );\n};\n\nexport default Region;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport format from \"date-fns/format\";\nimport { useObservable, useObservableState } from \"observable-hooks\";\nimport { combineLatest, Observable } from \"rxjs\";\nimport { distinctUntilChanged, map, startWith } from \"rxjs/operators\";\nimport { INITIAL_ZOOM } from \"../../../../shared/hooks/zoom\";\n\ninterface AxiosProps {\n  duration$: Observable<number>;\n  zoom$: Observable<number>;\n}\n\nconst Group = styled.g`\n  transform: translateY(100%);\n`;\n\nconst Tick = styled.rect`\n  height: 100%;\n  width: 1px;\n  fill: rgba(0, 0, 0, 0.1);\n  transform: translateY(-100%);\n`;\n\nconst TickLabel = styled.text`\n  font-size: 0.5rem;\n  color: black;\n`;\n\nfunction toDateTime(secs: number | undefined) {\n  var t = new Date(1970, 0, 1);\n  if (secs) t.setSeconds(secs);\n  return t;\n}\n\nconst formatTick = (d: Date): string => {\n  if (d.getHours() > 0) return format(d, \"HH:mm:ss\");\n  return format(d, \"mm:ss\");\n};\n\nconst INITIAL_QTY = 20;\n\nconst scales = [\n  1,\n  2,\n  5,\n  10,\n  15,\n  20,\n  30,\n  40,\n  ...[...Array(20).keys()].map((i) => i * 60),\n];\n\nconst Axis: React.FC<AxiosProps> = ({ duration$, zoom$ }) => {\n  const idealTickCount$ = useObservable(() =>\n    zoom$.pipe(\n      startWith(INITIAL_ZOOM),\n      map((z) => Math.round(z * INITIAL_QTY)),\n      distinctUntilChanged()\n    )\n  );\n\n  const tickCount$ = useObservable(() =>\n    combineLatest([duration$, idealTickCount$]).pipe(\n      map(([duration, idealTickCount]) => {\n        const fraction = duration / idealTickCount;\n        const segment = scales.find((s) => s >= fraction) || 3840;\n        return Math.floor(duration / segment);\n      }),\n      distinctUntilChanged()\n    )\n  );\n\n  const [Ticks] = useObservableState(() =>\n    combineLatest([duration$, tickCount$]).pipe(\n      map(([duration, tickCount]) => {\n        if (!duration) return null;\n        return [...Array(tickCount).keys()].map((i) => {\n          const x = (100 * i) / tickCount;\n          const tick = toDateTime((i * duration) / tickCount);\n          const label = formatTick(tick);\n          return (\n            <g key={tick.valueOf()}>\n              <Tick x={`${x}%`} />\n              <TickLabel x={`${x}%`} y=\"-2px\" textAnchor=\"middle\">\n                {label}\n              </TickLabel>\n            </g>\n          );\n        });\n      })\n    )\n  );\n\n  return <Group>{Ticks}</Group>;\n};\n\nexport default Axis;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Observable } from \"rxjs\";\nimport { useObservableState } from \"observable-hooks\";\nimport { map } from \"rxjs/operators\";\n\ninterface MarkerProps {\n  progress$: Observable<number>;\n}\n\nconst StyledRect = styled.rect`\n  width: 1px;\n  height: 100%;\n  fill: rgb(10, 10, 10);\n`;\n\nconst Marker: React.FC<MarkerProps> = ({ progress$ }) => {\n  const [markerPosition] = useObservableState<string>(\n    () =>\n      progress$.pipe(\n        map((v) => {\n          if (!v) return \"0px\";\n          return `${v * 100}%`;\n        })\n      ),\n    \"0px\"\n  );\n\n  return <StyledRect x={markerPosition} />;\n};\n\nexport default Marker;\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { merge, Observable, OperatorFunction, timer } from \"rxjs\";\nimport {\n  useObservable,\n  useObservableCallback,\n  useObservableState,\n  useSubscription,\n} from \"observable-hooks\";\nimport {\n  filter,\n  map,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n  throttleTime,\n  withLatestFrom,\n} from \"rxjs/operators\";\nimport * as mouse from \"../../../shared/operators/mouse\";\nimport { useZoom } from \"../../../shared/hooks/zoom\";\n\nimport { Url } from \"../../state\";\n\nimport Region, { TRegion } from \"./region\";\nimport Axis from \"./axis\";\nimport Marker from \"./marker\";\n\ninterface TimebarProps {\n  url$: Observable<Url>;\n  region$: Observable<TRegion>;\n  progress$: Observable<number>;\n  duration$: Observable<number>;\n  setRegion: (r: TRegion) => void;\n  setProgress: (r: number) => void;\n}\n\nconst TimebarWrapper = styled.div`\n  width: 100%;\n  overflow: hidden;\n  overflow-x: auto;\n`;\n\ntype SvgProps = { interactable: boolean; zoom: number };\nconst svg = styled.svg<SvgProps>``;\n\nconst Svg = styled(svg).attrs((props: SvgProps) => ({\n  style: {\n    width: `${100 * props.zoom}%`,\n  },\n}))`\n  height: 4rem;\n  background-color: rgb(240, 240, 240);\n  cursor: ${({ interactable }) => (interactable ? \"pointer\" : \"auto\")};\n  pointer-events: ${({ interactable }) => (interactable ? \"all\" : \"none\")};\n`;\n\nconst Timebar: React.FC<TimebarProps> = ({\n  url$,\n  region$,\n  progress$,\n  duration$,\n  setRegion,\n  setProgress,\n}) => {\n  const svgRef = useRef<SVGSVGElement>(null);\n  const { onWheel, resetZoom, zoom$ } = useZoom(svgRef);\n  const [zoom] = useObservableState(() => zoom$, 100);\n\n  const [videoLoaded] = useObservableState(\n    () =>\n      url$.pipe(\n        tap(() => resetZoom()),\n        map((url) => url !== undefined)\n      ),\n    false\n  );\n\n  const [onMouseDown, mouseDown$] = useObservableCallback<\n    React.MouseEvent<SVGSVGElement, MouseEvent>\n  >((e$) => e$.pipe(map(mouse.preventDefault)));\n\n  const [onMouseUp, mouseUp$] = useObservableCallback<\n    React.MouseEvent<SVGSVGElement, MouseEvent>\n  >((e$) => e$.pipe(map(mouse.preventDefault)));\n\n  const mousePosRelative$ = mouse.globalMouseMove$.pipe(\n    map(mouse.globalMouseEventToXDistance(svgRef)),\n    filter((v) => v !== undefined) as OperatorFunction<\n      number | undefined,\n      number\n    >\n  );\n\n  const [_onClick, click$] = useObservableCallback<\n    React.MouseEvent<SVGSVGElement, MouseEvent>\n  >((e$) => e$);\n\n  const leftClick$ = click$.pipe(\n    filter((e) => e.button === 0),\n    map(mouse.globalMouseEventToXDistance(svgRef))\n  );\n\n  const rightClick$ = mouseDown$.pipe(\n    filter((e) => e.button === 2),\n    throttleTime(500)\n  );\n\n  const holdClick$ = mouseDown$.pipe(\n    switchMap((e) =>\n      timer(100).pipe(\n        takeUntil(mouseUp$),\n        map(() => mouse.globalMouseEventToXDistance(svgRef)(e))\n      )\n    )\n  );\n\n  const regionClear$ = rightClick$.pipe(map(() => undefined));\n\n  const _region$: Observable<TRegion> = merge(\n    holdClick$.pipe(\n      switchMap((x1) =>\n        mousePosRelative$.pipe(\n          map((x2) => {\n            if (x1 > x2) return { start: x2, end: x1 };\n            else return { start: x1, end: x2 };\n          }),\n          takeUntil(mouseUp$)\n        )\n      )\n    ),\n    regionClear$\n  );\n\n  const regionEnd$ = holdClick$.pipe(\n    switchMap(() => mouseUp$.pipe(take(1))),\n    withLatestFrom(_region$),\n    map(([_, r]) => r)\n  );\n\n  useSubscription(leftClick$, setProgress);\n  useSubscription(regionEnd$, setRegion);\n  useSubscription(regionClear$, setRegion);\n\n  const mergedRegion$ = useObservable(() => merge(region$, _region$));\n\n  return (\n    <TimebarWrapper>\n      <Svg\n        ref={svgRef}\n        onContextMenu={(e) => e.preventDefault()}\n        onClick={_onClick}\n        onMouseUp={onMouseUp}\n        onMouseDown={onMouseDown}\n        onWheel={onWheel}\n        zoom={zoom}\n        interactable={videoLoaded}\n      >\n        <Marker progress$={progress$} />\n        <Region\n          region$={mergedRegion$}\n          containerRef={svgRef}\n          onRegion={setRegion}\n        />\n        <Axis duration$={duration$} zoom$={zoom$} />\n      </Svg>\n    </TimebarWrapper>\n  );\n};\n\nexport default Timebar;\n","import { AppStatus } from \"../../state\";\n\nexport const getLabels = (status: AppStatus) => {\n  const video = status === \"playingVideo\" ? \"Stop\" : \"Play\";\n  const recording =\n    status === \"recordingVoice\" ? \"Stop recording\" : \"Start recording\";\n  const playback = status === \"playingVoice\" ? \"Stop voice\" : \"Play Voice\";\n\n  return { video, recording, playback };\n};\n","import React from \"react\";\nimport {\n  useObservableCallback,\n  useObservableState,\n  useSubscription,\n} from \"observable-hooks\";\nimport { Observable } from \"rxjs\";\nimport { map, withLatestFrom } from \"rxjs/operators\";\nimport styled from \"styled-components\";\nimport { AppStatus } from \"../../state\";\nimport { getLabels } from \"./utils\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin: 1rem 0;\n  & > * {\n    margin: 0 0.5rem;\n  }\n`;\n\ninterface ControlProps {\n  status$: Observable<AppStatus>;\n  setStatus: (status: AppStatus) => void;\n}\n\nconst noop = (...args: any[]): void => {};\n\nconst Controls: React.FC<ControlProps> = ({ status$, setStatus }) => {\n  const [labels] = useObservableState(() => status$.pipe(map(getLabels)));\n\n  const [videoEnabled] = useObservableState<boolean>(() =>\n    status$.pipe(\n      map((status) => status === \"playingVideo\" || status === \"idle\")\n    )\n  );\n\n  const [recordingEnabled] = useObservableState<boolean>(() =>\n    status$.pipe(\n      map((status) => status === \"recordingVoice\" || status === \"idle\")\n    )\n  );\n\n  const [playbackEnabled] = useObservableState<boolean>(() =>\n    status$.pipe(\n      map((status) => status === \"playingVoice\" || status === \"idle\")\n    )\n  );\n\n  const [onVideoClick, videoClick$] = useObservableCallback(($e) =>\n    $e.pipe(withLatestFrom(status$))\n  );\n  useSubscription(videoClick$, ([_, status]) => {\n    switch (status) {\n      case \"playingVideo\":\n        setStatus(\"idle\");\n        break;\n      case \"idle\":\n        setStatus(\"playingVideo\");\n        break;\n      default:\n        break;\n    }\n  });\n\n  const [onRecordingClick, recordingClick$] = useObservableCallback(($e) =>\n    $e.pipe(withLatestFrom(status$))\n  );\n  useSubscription(recordingClick$, ([_, status]) => {\n    switch (status) {\n      case \"recordingVoice\":\n        setStatus(\"idle\");\n        break;\n      case \"idle\":\n        setStatus(\"attemptingRecord\");\n        break;\n      default:\n        break;\n    }\n  });\n\n  const [onPlaybackClick, playbackClick$] = useObservableCallback(($e) =>\n    $e.pipe(withLatestFrom(status$))\n  );\n  useSubscription(playbackClick$, ([_, status]) => {\n    switch (status) {\n      case \"playingVoice\":\n        setStatus(\"idle\");\n        break;\n      case \"idle\":\n        setStatus(\"playingVoice\");\n        break;\n      default:\n        break;\n    }\n  });\n\n  return (\n    <Container>\n      <button\n        disabled={!videoEnabled}\n        onClick={videoEnabled ? onVideoClick : noop}\n      >\n        {labels?.video}\n      </button>\n      <button\n        disabled={!recordingEnabled}\n        onClick={recordingEnabled ? onRecordingClick : noop}\n      >\n        {labels?.recording}\n      </button>\n      <button\n        disabled={!playbackEnabled}\n        onClick={playbackEnabled ? onPlaybackClick : noop}\n      >\n        {labels?.playback}\n      </button>\n    </Container>\n  );\n};\n\nexport default Controls;\n","import React, { useCallback } from \"react\";\n\nconst noop = () => {};\n\nexport type MediaRecorderStatus =\n  | \"acquiring_media\"\n  | \"ready\"\n  | \"failed\"\n  | \"idle\"\n  | \"stopping\"\n  | \"stopped\"\n  | \"recording\";\n\nexport interface UseMediaRecorder {\n  blobOptions?: Partial<BlobPropertyBag>;\n  onStop?: (b: Blob) => void;\n  onStart?: VoidFunction;\n  onError?: (e: DOMException) => void;\n  onDataAvailable?: (b: Blob) => void;\n}\n\nexport function useMediaRecorder({\n  blobOptions = {},\n  onStop = noop,\n  onStart = noop,\n  onError = noop,\n  onDataAvailable = noop,\n}: UseMediaRecorder) {\n  let mediaChunks = React.useRef<Blob[]>([]);\n  let mediaStream = React.useRef<MediaStream | null>(null);\n  let mediaRecorder = React.useRef<MediaRecorder | null>(null);\n  let [error, setError] = React.useState<Error | null>(null);\n  let [status, setStatus] = React.useState<MediaRecorderStatus>(\"idle\");\n  let [mediaBlob, setMediaBlob] = React.useState<Blob | null>(null);\n  let [isAudioMuted, setIsAudioMuted] = React.useState(false);\n\n  const getMediaStream = useCallback(async () => {\n    if (error) {\n      setError(null);\n    }\n\n    setStatus(\"acquiring_media\");\n\n    try {\n      const stream = await window.navigator.mediaDevices.getUserMedia({\n        audio: true,\n      });\n\n      stream\n        .getAudioTracks()\n        .forEach((audioTrack) => stream.addTrack(audioTrack));\n\n      mediaStream.current = stream;\n      setStatus(\"ready\");\n    } catch (err) {\n      setError(err);\n      setStatus(\"failed\");\n    }\n  }, [mediaStream, setStatus, setError, error]);\n\n  const clearMediaStream = useCallback(() => {\n    if (mediaStream.current) {\n      mediaStream.current.getTracks().forEach((track) => track.stop());\n      mediaStream.current = null;\n    }\n  }, [mediaStream]);\n\n  const handleDataAvailable = useCallback(\n    (e: BlobEvent) => {\n      if (e.data.size) {\n        mediaChunks.current.push(e.data);\n      }\n      onDataAvailable(e.data);\n    },\n    [onDataAvailable, mediaChunks]\n  );\n\n  const handleStop = useCallback(() => {\n    let [sampleChunk] = mediaChunks.current;\n    const type = sampleChunk ? sampleChunk.type : \"audio/webm\";\n    let blobPropertyBag = Object.assign({ type }, blobOptions);\n    let blob = new Blob(mediaChunks.current, blobPropertyBag);\n\n    setMediaBlob(blob);\n    setStatus(\"stopped\");\n    onStop(blob);\n  }, [mediaChunks, blobOptions, setMediaBlob, setStatus, onStop]);\n\n  const handleError = useCallback(\n    (e: MediaRecorderErrorEvent) => {\n      setError(e.error);\n      setStatus(\"idle\");\n      onError(e.error);\n    },\n    [setError, setStatus, onError]\n  );\n\n  const startRecording = useCallback(async () => {\n    if (error) {\n      setError(null);\n    }\n\n    if (!mediaStream.current && status !== \"acquiring_media\") {\n      await getMediaStream();\n    }\n\n    mediaChunks.current = [];\n\n    if (mediaStream.current) {\n      mediaRecorder.current = new MediaRecorder(mediaStream.current, {\n        mimeType: \"audio/webm\",\n      });\n      mediaRecorder.current.addEventListener(\n        \"dataavailable\",\n        handleDataAvailable\n      );\n      mediaRecorder.current.addEventListener(\"stop\", handleStop);\n      mediaRecorder.current.addEventListener(\"error\", handleError);\n      mediaRecorder.current.start(50);\n      setStatus(\"recording\");\n      onStart();\n    }\n  }, [\n    mediaRecorder,\n    mediaStream,\n    mediaChunks,\n    error,\n    status,\n    onStart,\n    setError,\n    setStatus,\n    getMediaStream,\n    handleDataAvailable,\n    handleError,\n    handleStop,\n  ]);\n\n  const muteAudio = useCallback(\n    (mute: boolean) => {\n      setIsAudioMuted(mute);\n\n      if (mediaStream.current) {\n        mediaStream.current.getAudioTracks().forEach((audioTrack) => {\n          audioTrack.enabled = !mute;\n        });\n      }\n    },\n    [setIsAudioMuted, mediaStream]\n  );\n\n  const pauseRecording = useCallback(() => {\n    if (mediaRecorder.current && mediaRecorder.current.state === \"recording\") {\n      mediaRecorder.current.pause();\n    }\n  }, [mediaRecorder]);\n\n  const resumeRecording = useCallback(() => {\n    if (mediaRecorder.current && mediaRecorder.current.state === \"paused\") {\n      mediaRecorder.current.resume();\n    }\n  }, [mediaRecorder]);\n\n  const stopRecording = useCallback(() => {\n    if (mediaRecorder.current) {\n      setStatus(\"stopping\");\n      try {\n        mediaRecorder.current.stop();\n      } catch {\n        console.warn(\"Stoping idle media recorder!\");\n      }\n      mediaRecorder.current.removeEventListener(\n        \"dataavailable\",\n        handleDataAvailable\n      );\n      mediaRecorder.current.removeEventListener(\"stop\", handleStop);\n      mediaRecorder.current.removeEventListener(\"error\", handleError);\n      clearMediaStream();\n    }\n  }, [\n    mediaRecorder,\n    clearMediaStream,\n    handleDataAvailable,\n    handleError,\n    handleStop,\n    setStatus,\n  ]);\n\n  React.useEffect(() => {\n    if (!window.MediaRecorder) {\n      throw new ReferenceError(\n        \"MediaRecorder is not supported in this browser. Please ensure that you are running the latest version of chrome/firefox/edge.\"\n      );\n    }\n  }, []);\n\n  return {\n    error,\n    status,\n    mediaBlob,\n    isAudioMuted,\n    stopRecording,\n    getMediaStream,\n    startRecording,\n    pauseRecording,\n    resumeRecording,\n    clearMediaStream,\n    muteAudio: () => muteAudio(true),\n    unMuteAudio: () => muteAudio(false),\n    get liveStream() {\n      if (mediaStream.current) {\n        return new MediaStream(mediaStream.current.getVideoTracks());\n      }\n      return null;\n    },\n  };\n}\n","import { useObservable, useSubscription } from \"observable-hooks\";\nimport React, { useCallback, useRef, useState } from \"react\";\nimport { Observable } from \"rxjs\";\nimport { pairwise } from \"rxjs/operators\";\nimport { useMediaRecorder } from \"../../../shared/hooks/media\";\nimport { AppStatus } from \"../../state\";\n\ninterface RecorderProps {\n  status$: Observable<AppStatus>;\n  setStatus: (status: AppStatus) => void;\n}\n\nconst Recorder: React.FC<RecorderProps> = ({ status$, setStatus }) => {\n  const refAudio = useRef<HTMLAudioElement>(null);\n  const statusPair$ = useObservable(() => status$.pipe(pairwise()));\n  const [blobUrl, setBlobUrl] = useState<string | undefined>(undefined);\n\n  const onStop = useCallback(\n    (blob: Blob) => {\n      if (refAudio.current) {\n        const _blobUrl = URL.createObjectURL(blob);\n        refAudio.current.src = _blobUrl;\n        setBlobUrl(_blobUrl);\n        setStatus(\"idle\");\n      }\n    },\n    [setStatus, setBlobUrl, refAudio]\n  );\n\n  const onStart = useCallback(() => setStatus(\"recordingVoice\"), [setStatus]);\n  const onError = useCallback(() => setStatus(\"idle\"), [setStatus]);\n\n  const { startRecording, stopRecording } = useMediaRecorder({\n    onStop,\n    onStart,\n    onError,\n  });\n\n  useSubscription(statusPair$, ([statusPrev, status]) => {\n    switch (status) {\n      case \"attemptingRecord\":\n        startRecording();\n        URL.revokeObjectURL(blobUrl || \"\");\n        setBlobUrl(undefined);\n        break;\n      case \"playingVoice\":\n        if (refAudio.current && refAudio.current.src) {\n          refAudio.current.play();\n        }\n        break;\n      case \"idle\":\n        if (statusPrev === \"playingVoice\") {\n          if (refAudio.current) {\n            refAudio.current.pause();\n            refAudio.current.currentTime = 0;\n          }\n        } else if (statusPrev === \"recordingVoice\") {\n          stopRecording();\n        }\n        break;\n      default:\n        break;\n    }\n  });\n\n  const onEnded = useCallback(() => {\n    if (refAudio.current) {\n      refAudio.current.pause();\n      refAudio.current.currentTime = 0;\n      setStatus(\"idle\");\n    }\n  }, [refAudio, setStatus]);\n\n  return <audio ref={refAudio} onEnded={onEnded} />;\n};\n\nexport default Recorder;\n","import { useCallback, useMemo, RefObject, createRef } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { BehaviorSubject } from \"rxjs\";\n\nexport type Url = string | undefined;\nexport type DefinedRegion = { start: number; end: number };\nexport type TRegion = DefinedRegion | undefined;\n\nexport type AppStatus =\n  | \"idle\"\n  | \"loading\"\n  | \"playingVoice\"\n  | \"attemptingRecord\"\n  | \"recordingVoice\"\n  | \"playingVideo\";\n\nexport type AppState = {\n  status: AppStatus;\n  url: Url;\n  duration: number;\n  progress: number;\n  region: TRegion;\n  playerRef: RefObject<ReactPlayer>;\n};\n\nconst initialState: AppState = {\n  status: \"idle\",\n  url: undefined,\n  duration: 0,\n  progress: 0,\n  region: undefined,\n  playerRef: createRef(),\n};\n\nexport const useAppState = () => {\n  const state$ = useMemo(() => new BehaviorSubject<AppState>(initialState), []);\n\n  const setStatus = useCallback(\n    (status: AppStatus) => {\n      const value = state$.getValue();\n      if (value.region) value.playerRef.current?.seekTo(value.region.start);\n      state$.next({ ...value, status });\n    },\n    [state$]\n  );\n\n  const setUrl = useCallback(\n    (url: Url) => state$.next({ ...state$.getValue(), url }),\n    [state$]\n  );\n\n  const setProgress = useCallback(\n    (progress: number) => {\n      const value = state$.getValue();\n      if (value.region) {\n        if (progress >= value.region.end) {\n          value.playerRef.current?.seekTo(value.region.start);\n          state$.next({\n            ...value,\n            progress: value.region.start,\n            status: \"idle\",\n          });\n          return;\n        }\n      }\n      state$.next({ ...value, progress });\n    },\n    [state$]\n  );\n\n  const setManualProgress = useCallback(\n    (progress: number) => {\n      const value = state$.getValue();\n      value.playerRef.current?.seekTo(progress);\n      state$.next({ ...value, status: \"idle\", progress });\n    },\n    [state$]\n  );\n\n  const setDuration = useCallback(\n    (duration: number) => state$.next({ ...state$.getValue(), duration }),\n    [state$]\n  );\n\n  const setRegion = useCallback(\n    (region: TRegion) => state$.next({ ...state$.getValue(), region }),\n    [state$]\n  );\n\n  return {\n    state$,\n    setStatus,\n    setUrl,\n    setProgress,\n    setManualProgress,\n    setDuration,\n    setRegion,\n  };\n};\n","import React from \"react\";\n\nimport Player from \"./components/player\";\nimport Input from \"./components/input\";\nimport Timebar from \"./components/timebar\";\nimport Controls from \"./components/controls\";\nimport Recorder from \"./components/recorder\";\n\nimport { useAppState } from \"./state\";\nimport { usePartitionedState } from \"./hooks\";\n\nfunction App() {\n  const { state$, ...setters } = useAppState();\n\n  const {\n    url$,\n    status$,\n    region$,\n    duration$,\n    progress$,\n    playerRef$,\n  } = usePartitionedState(state$);\n\n  return (\n    <div>\n      <Input onChange={setters.setUrl} />\n      <Timebar\n        url$={url$}\n        region$={region$}\n        duration$={duration$}\n        progress$={progress$}\n        setRegion={setters.setRegion}\n        setProgress={setters.setManualProgress}\n      />\n      <Controls status$={status$} setStatus={setters.setStatus} />\n      <Player\n        url$={url$}\n        playerRef$={playerRef$}\n        status$={status$}\n        setDuration={setters.setDuration}\n        setProgress={setters.setProgress}\n      />\n      <Recorder status$={status$} setStatus={setters.setStatus} />\n    </div>\n  );\n}\n\nexport default App;\n","import { useObservable } from \"observable-hooks\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { distinctUntilChanged, map } from \"rxjs/operators\";\nimport { AppState } from \"./state\";\n\nexport const usePartitionedState = (state$: BehaviorSubject<AppState>) => {\n  const status$ = useObservable(() =>\n    state$.pipe(\n      map((s) => s.status),\n      distinctUntilChanged()\n    )\n  );\n\n  const url$ = useObservable(() =>\n    state$.pipe(\n      map((s) => s.url),\n      distinctUntilChanged()\n    )\n  );\n\n  const duration$ = useObservable(() =>\n    state$.pipe(\n      map((s) => s.duration),\n      distinctUntilChanged()\n    )\n  );\n\n  const progress$ = useObservable(() =>\n    state$.pipe(\n      map((s) => s.progress),\n      distinctUntilChanged()\n    )\n  );\n\n  const region$ = useObservable(() =>\n    state$.pipe(\n      map((s) => s.region),\n      distinctUntilChanged()\n    )\n  );\n\n  const playerRef$ = useObservable(() =>\n    state$.pipe(\n      map((s) => s.playerRef),\n      distinctUntilChanged()\n    )\n  );\n\n  return { status$, url$, duration$, progress$, region$, playerRef$ };\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./app\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}